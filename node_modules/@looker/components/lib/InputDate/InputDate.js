"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputDate = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _InputText = require("../Form/Inputs/InputText");

var _Calendar = require("../Calendar");

var _i18n = require("../utils/i18n");

var _useReadOnlyWarn = require("../utils/useReadOnlyWarn");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var isDateInView = (value, viewMonth) => {
  if (!value) {
    return false;
  }

  if (value.getFullYear() === viewMonth.getFullYear() && value.getMonth() === viewMonth.getMonth()) {
    return true;
  }

  return false;
};

var InputDate = (0, _react.forwardRef)((_ref, ref) => {
  var {
    onChange,
    defaultValue,
    localization,
    dateStringLocale,
    validationType,
    onValidationFail,
    value,
    id,
    disabled
  } = _ref;
  (0, _useReadOnlyWarn.useReadOnlyWarn)('InputDate', value, onChange);
  var [selectedDate, setSelectedDate] = (0, _react.useState)(value || defaultValue);
  var [validDate, setValidDate] = (0, _react.useState)(validationType !== 'error');
  var [textInputValue, setTextInputValue] = (0, _react.useState)(selectedDate ? (0, _i18n.formatDateString)(selectedDate, dateStringLocale) : '');
  var [viewMonth, setViewMonth] = (0, _react.useState)(value || defaultValue || new Date(Date.now()));

  var handleDateChange = date => {
    if (!validationType) {
      setValidDate(true);
    }

    setSelectedDate(date);
    setViewMonth(date);

    if ((0, _isFunction.default)(onChange)) {
      onChange(date);
    }
  };

  var handleDayClick = date => {
    setTextInputValue((0, _i18n.formatDateString)(date, dateStringLocale));
    handleDateChange(date);
  };

  var handleTextInputChange = e => {
    var value = e.target.value;
    setTextInputValue(value);

    if (value.length === 0) {
      handleDateChange();
    } else {
      var parsedValue = (0, _i18n.parseDateFromString)(value, dateStringLocale);

      if (parsedValue) {
        handleDateChange(parsedValue);
      }
    }
  };

  var handleValidation = e => {
    if (!validationType) {
      var _value = e.target.value;
      var isValid = _value.length === 0 || !!(0, _i18n.parseDateFromString)(_value, dateStringLocale);
      setValidDate(isValid);

      if (!isValid && (0, _isFunction.default)(onValidationFail)) {
        onValidationFail(_value);
      }
    }
  };

  var handleNavClick = month => {
    setViewMonth(month);
  };

  var renderedValidationType = !validDate ? 'error' : undefined;
  (0, _react.useEffect)(() => {
    if (value && !(0, _isEqual.default)(value, selectedDate)) {
      setSelectedDate(value);
      value && setTextInputValue((0, _i18n.formatDateString)(value, dateStringLocale));
      value && viewMonth && !isDateInView(value, viewMonth) && setViewMonth(value);
    }
  }, [textInputValue, value, onChange]);
  return _react.default.createElement(InputDateWrapper, null, _react.default.createElement(_InputText.InputText, {
    placeholder: "Date (".concat((0, _i18n.formatDateString)(new Date(Date.now()), dateStringLocale), ")"),
    value: textInputValue,
    onChange: handleTextInputChange,
    validationType: renderedValidationType,
    onBlur: handleValidation,
    "data-testid": "text-input",
    id: id,
    ref: ref,
    disabled: disabled,
    my: "xxsmall"
  }), _react.default.createElement(CalendarWrapper, null, _react.default.createElement(_Calendar.Calendar, {
    selectedDates: selectedDate,
    onDayClick: handleDayClick,
    localization: localization,
    viewMonth: viewMonth,
    onNowClick: handleNavClick,
    onNextClick: handleNavClick,
    onPrevClick: handleNavClick,
    disabled: disabled
  })));
});
exports.InputDate = InputDate;
InputDate.displayName = 'InputDate';

var InputDateWrapper = _styledComponents.default.div.withConfig({
  displayName: "InputDate__InputDateWrapper",
  componentId: "sc-1s4m2v2-0"
})(["width:100%;"]);

var CalendarWrapper = _styledComponents.default.div.withConfig({
  displayName: "InputDate__CalendarWrapper",
  componentId: "sc-1s4m2v2-1"
})(["", "{padding:0;}"], _Calendar.Calendar);
//# sourceMappingURL=InputDate.js.map