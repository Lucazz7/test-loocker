"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PageSize = exports.PageSizeLayout = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Form = require("../Form");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultPageSizes = [10, 25, 50, 100];

var stringToSelectOption = option => ({
  label: String(option),
  value: String(option)
});

var arrayToSelectOptions = options => options.map(option => stringToSelectOption(String(option)));

var PageSizeLayout = (_ref) => {
  var {
    value,
    total,
    className,
    onChange,
    options = defaultPageSizes
  } = _ref;

  var handleOnChange = newValue => onChange(Number(newValue));

  return Math.min(...options) < total ? _react.default.createElement("div", {
    className: className
  }, "Display", _react.default.createElement(_Form.Select, {
    width: "5rem",
    mx: "xsmall",
    options: arrayToSelectOptions(options),
    value: String(value),
    onChange: handleOnChange
  }), "of ", total) : null;
};

exports.PageSizeLayout = PageSizeLayout;
var PageSize = (0, _styledComponents.default)(PageSizeLayout).withConfig({
  displayName: "PageSize",
  componentId: "lmdbtc-0"
})(["align-items:center;display:flex;font-size:", ";"], (_ref2) => {
  var {
    theme
  } = _ref2;
  return theme.fontSizes.small;
});
exports.PageSize = PageSize;
//# sourceMappingURL=PageSize.js.map