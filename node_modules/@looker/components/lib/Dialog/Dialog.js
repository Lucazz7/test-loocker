"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Dialog = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _Portal = require("../Portal");

var _utils = require("../utils");

var _Backdrop = require("./Backdrop");

var _DialogContext = require("./DialogContext");

var _Surface = require("./Surface");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Dialog = (_ref) => {
  var {
    backdrop,
    children,
    isOpen,
    onClose,
    maxWidth,
    surfaceStyles,
    width
  } = _ref;
  var {
    callbackRef: focusRef,
    disable: disableFocusTrap,
    enable: enableFocusTrap,
    isEnabled: focusTrapEnabled,
    trapRef: focusTrapRef
  } = (0, _utils.useFocusTrap)(isOpen);
  var {
    callbackRef: scrollRef,
    disable: disableScrollLock,
    enable: enableScrollLock,
    isEnabled: scrollLockEnabled
  } = (0, _utils.useScrollLock)(isOpen, false);

  var handleClose = () => {
    onClose && onClose();
  };

  return _react.default.createElement(_DialogContext.DialogContext.Provider, {
    value: {
      closeModal: handleClose,
      disableFocusTrap,
      disableScrollLock,
      enableFocusTrap,
      enableScrollLock,
      focusTrapEnabled,
      focusTrapRef,
      scrollLockEnabled
    }
  }, _react.default.createElement(_reactTransitionGroup.CSSTransition, {
    classNames: "modal",
    mountOnEnter: true,
    unmountOnExit: true,
    in: isOpen,
    timeout: {
      enter: 0,
      exit: 250
    }
  }, state => _react.default.createElement(_Portal.Portal, {
    ref: node => {
      focusRef(node);
      scrollRef(node);
    }
  }, _react.default.createElement(_Backdrop.Backdrop, {
    className: state,
    onClick: onClose,
    visible: backdrop === undefined ? true : !!backdrop,
    style: !!backdrop && backdrop !== true ? backdrop : undefined
  }), _react.default.createElement(_Surface.Surface, {
    style: surfaceStyles,
    className: state,
    width: width,
    maxWidth: maxWidth
  }, children))));
};

exports.Dialog = Dialog;
//# sourceMappingURL=Dialog.js.map