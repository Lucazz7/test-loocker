"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Surface = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _reactHotkeys = require("react-hotkeys");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _DialogContext = require("./DialogContext");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SurfaceLayout = (_ref) => {
  var {
    anchor,
    surfaceStyles,
    className
  } = _ref,
      props = _objectWithoutProperties(_ref, ["anchor", "surfaceStyles", "className"]);

  var {
    closeModal,
    enableFocusTrap,
    enableScrollLock
  } = (0, _react.useContext)(_DialogContext.DialogContext);
  (0, _react.useEffect)(() => {
    enableScrollLock && enableScrollLock();
    var t = window.setTimeout(() => {
      enableFocusTrap && enableFocusTrap();
    }, _designTokens.theme.transitions.durationModerate);
    return () => {
      window.clearTimeout(t);
    };
  }, [enableFocusTrap, enableScrollLock]);
  return _react.default.createElement(_reactHotkeys.HotKeys, {
    keyMap: {
      CLOSE_MODAL: {
        action: 'keyup',
        name: 'Close Modal',
        sequence: 'esc'
      }
    },
    handlers: {
      CLOSE_MODAL: () => closeModal()
    },
    style: {
      alignItems: 'center',
      display: 'flex',
      height: '100%',
      justifyContent: anchor === 'right' ? 'flex-end' : 'center',
      width: '100%'
    }
  }, _react.default.createElement("div", _extends({
    className: "surface-overflow ".concat(className),
    style: surfaceStyles
  }, (0, _designTokens.omitStyledProps)(props))));
};

var surfaceTransition = () => (0, _styledComponents.css)(["", ""], props => "".concat(props.theme.transitions.durationModerate, " ").concat(props.theme.easings.ease));

var Surface = (0, _styledComponents.default)(SurfaceLayout).withConfig({
  displayName: "Surface",
  componentId: "sc-7dr74t-0"
})(["", " ", " ", " ", " ", " display:flex;flex-direction:column;position:relative;transition:transform ", ",opacity ", ";&:focus{outline:none;}&.entering,&.exiting{opacity:0.01;transform:translateY(100%);}&.exited{opacity:1;transform:translateY(0%);}"], _designTokens.reset, _styledSystem.boxShadow, _styledSystem.border, _styledSystem.layout, _styledSystem.color, surfaceTransition, surfaceTransition);
exports.Surface = Surface;
Surface.defaultProps = {
  backgroundColor: 'background',
  borderRadius: 'medium',
  boxShadow: 3,
  color: 'text1',
  maxHeight: '90vh',
  maxWidth: ['90vw', '90vw', '600px']
};
//# sourceMappingURL=Surface.js.map