{"version":3,"sources":["../../../../../src/Form/Inputs/InputColor/utils/color_format_utils.ts"],"names":["ColorFormat","RGB_MAX_VALUE","recognize","format","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reRgbaPercent2","reHslPercent","reHslaPercent","String","trim","toLowerCase","exec","HEX3","HEX6","RGBI","RGBP","RGBIA","RGBPA","HSL","HSLA","Object","prototype","hasOwnProperty","call","namedColors","NAME","TRANSPARENT","BAD","getFormat","value","getOpacity","color","d3color","cubehelix","hcl","hsl","rgb","lab","opacity","namedColorLookup","hex","replace","lookup","parseInt","namedColorsFlipped","Map","entries","map","k","v","get","toColorName","opacityUse","name","toString","toRGBIString","useAlpha","r","Math","round","g","b","toRGBPString","toHSLString","h","isNaN","s","l","toFormattedColorString","displayable","toHSV","d3hsv","hsv","hsvToColorString","hsvColor","hsv2hex","str2simpleHsv","simpleHSV","simpleHSVtoRGB","simpleHSVtoFormattedColorString","colorFormat","rgbColor"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2020 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport * as d3color from 'd3-color'\nimport * as d3hsv from 'd3-hsv'\nimport { SimpleHSV } from '../ColorWheel/color_wheel_utils'\nimport { toPercent } from './math_utils'\nimport { namedColors } from './named_colors'\n\nexport enum ColorFormat {\n  NAME,\n  HEX3,\n  HEX6,\n  RGBI,\n  RGBIA,\n  RGBP,\n  RGBPA,\n  HSL,\n  HSLA,\n  TRANSPARENT,\n  BAD,\n}\n\nconst RGB_MAX_VALUE = 255\n\nconst recognize = (format: string) => {\n  // copied and tweaked from https://github.com/d3/d3-color/blob/master/src/color.js#L8\n  const reI = '\\\\s*([+-]?\\\\d+)\\\\s*'\n  const reN = '\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*'\n  const reP = '\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*'\n  const reHex3 = /^#([0-9a-f]{3})$/\n  const reHex6 = /^#([0-9a-f]{6})$/\n  const reRgbInteger = new RegExp('^rgb\\\\(' + [reI, reI, reI] + '\\\\)$')\n  const reRgbPercent = new RegExp('^rgb\\\\(' + [reP, reP, reP] + '\\\\)$')\n  const reRgbaInteger = new RegExp('^rgba\\\\(' + [reI, reI, reI, reN] + '\\\\)$')\n  const reRgbaPercent = new RegExp('^rgba\\\\(' + [reP, reP, reP, reN] + '\\\\)$')\n  const reRgbaPercent2 = new RegExp('^rgba\\\\(' + [reP, reP, reP, reP] + '\\\\)$')\n  const reHslPercent = new RegExp('^hsl\\\\(' + [reN, reP, reP] + '\\\\)$')\n  const reHslaPercent = new RegExp('^hsla\\\\(' + [reN, reP, reP, reN] + '\\\\)$')\n\n  format = String(format).trim().toLowerCase()\n\n  return reHex3.exec(format)\n    ? ColorFormat.HEX3\n    : reHex6.exec(format)\n    ? ColorFormat.HEX6\n    : reRgbInteger.exec(format)\n    ? ColorFormat.RGBI\n    : reRgbPercent.exec(format)\n    ? ColorFormat.RGBP\n    : reRgbaInteger.exec(format)\n    ? ColorFormat.RGBIA\n    : reRgbaPercent.exec(format)\n    ? ColorFormat.RGBPA\n    : reRgbaPercent2.exec(format)\n    ? ColorFormat.RGBPA\n    : reHslPercent.exec(format)\n    ? ColorFormat.HSL\n    : reHslaPercent.exec(format)\n    ? ColorFormat.HSLA\n    : Object.prototype.hasOwnProperty.call(namedColors, format)\n    ? ColorFormat.NAME\n    : format === 'transparent'\n    ? ColorFormat.TRANSPARENT\n    : ColorFormat.BAD\n}\n\nexport const getFormat = (value: string) => ColorFormat[recognize(value)]\n\nexport const getOpacity = (color: d3color.Color): number => {\n  if (\n    color instanceof d3color.cubehelix ||\n    color instanceof d3color.hcl ||\n    color instanceof d3color.hsl ||\n    color instanceof d3color.rgb ||\n    color instanceof d3color.lab\n  ) {\n    return color.opacity\n  }\n  return 1\n}\n\nconst namedColorLookup = (color: d3color.Color) => {\n  const hex = color.hex().replace(/^#/, '')\n  const lookup = parseInt(hex, 16)\n  const namedColorsFlipped = new Map(\n    Object.entries(namedColors).map<[number, string]>(([k, v]) => [v, k])\n  )\n  return namedColorsFlipped.get(lookup)\n}\n\nexport const toColorName = (\n  color: d3color.RGBColor | d3color.HSLColor,\n  opacity: number | null = null\n) => {\n  const opacityUse = opacity || getOpacity(color)\n  const name = namedColorLookup(color)\n  if (name) return name\n  if (opacityUse !== 1) return d3color.rgb(color).toString()\n  return color.hex()\n}\n\nexport const toRGBIString = (\n  color: d3color.RGBColor | d3color.HSLColor,\n  opacity: number | null = null,\n  useAlpha = false\n) => {\n  const opacityUse = opacity || getOpacity(color)\n  const rgb = color.rgb()\n  const r = Math.round(rgb.r)\n  const g = Math.round(rgb.g)\n  const b = Math.round(rgb.b)\n  if (useAlpha || opacityUse !== 1) {\n    return `rgba(${r}, ${g}, ${b}, ${opacityUse})`\n  }\n  return `rgb(${r}, ${g}, ${b})`\n}\n\nexport const toRGBPString = (\n  color: d3color.RGBColor | d3color.HSLColor,\n  opacity: number | null = null,\n  useAlpha = false\n) => {\n  const opacityUse = opacity || getOpacity(color)\n  const rgb = color.rgb()\n  const r = toPercent(rgb.r, RGB_MAX_VALUE)\n  const g = toPercent(rgb.g, RGB_MAX_VALUE)\n  const b = toPercent(rgb.b, RGB_MAX_VALUE)\n  if (useAlpha || opacityUse !== 1) {\n    return `rgba(${r}%, ${g}%, ${b}%, ${opacityUse})`\n  }\n  return `rgb(${r}%, ${g}%, ${b}%)`\n}\n\nexport const toHSLString = (\n  color: d3color.RGBColor | d3color.HSLColor,\n  opacity: number | null = null,\n  useAlpha = false\n) => {\n  const opacityUse = opacity || getOpacity(color)\n  const hsl = d3color.hsl(color)\n  const h = isNaN(hsl.h) ? 0 : hsl.h\n  const s = isNaN(hsl.s) ? 0 : Math.round(hsl.s * 100)\n  const l = isNaN(hsl.l) ? 100 : Math.round(hsl.l * 100)\n  if (useAlpha || opacityUse !== 1) {\n    return `hsla(${h}, ${s}%, ${l}%, ${opacityUse})`\n  }\n  return `hsl(${h}, ${s}%, ${l}%)`\n}\n\nexport const toFormattedColorString = (\n  value: string,\n  format: ColorFormat | null = null\n): string => {\n  const color = d3color.color(value)\n  if (!color) return ''\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  if (!color.displayable) return ''\n\n  if (format === null) format = recognize(value)\n  const opacity = getOpacity(color)\n\n  switch (format) {\n    case ColorFormat.NAME:\n    case ColorFormat.TRANSPARENT:\n      return toColorName(color)\n    case ColorFormat.HEX3:\n    case ColorFormat.HEX6:\n      if (opacity === 1) return color.hex()\n      return color.rgb().toString()\n    case ColorFormat.RGBI:\n      return color.rgb().toString()\n    case ColorFormat.RGBIA:\n      return toRGBIString(color, opacity, true)\n    case ColorFormat.RGBP:\n      return toRGBPString(color, opacity)\n    case ColorFormat.RGBPA:\n      return toRGBPString(color, opacity, true)\n    case ColorFormat.HSL:\n      return toHSLString(color, opacity)\n    case ColorFormat.HSLA:\n      return toHSLString(color, opacity, true)\n    default:\n      return color.toString()\n  }\n}\nexport const toHSV = (value: string) => {\n  const color = d3color.color(value)\n  if (!color) return null\n  return d3hsv.hsv(color)\n}\n\nexport const hsvToColorString = (\n  hsvColor: d3hsv.HSVColor,\n  format: ColorFormat | null = null\n) => toFormattedColorString(hsvColor.rgb().toString(), format)\n\nexport const hsv2hex = (color: SimpleHSV) =>\n  d3hsv.hsv(color.h, color.s, color.v).hex()\n\nexport const str2simpleHsv = (color: string) => {\n  const hsvColor = d3hsv.hsv(color)\n  const simpleHSV: SimpleHSV = { h: hsvColor.h, s: hsvColor.s, v: hsvColor.v }\n  return simpleHSV\n}\n\nexport const simpleHSVtoRGB = (color: SimpleHSV) =>\n  d3hsv.hsv(color.h, color.s, color.v).rgb()\n\nexport const simpleHSVtoFormattedColorString = (\n  color: SimpleHSV,\n  colorFormat?: string\n) => {\n  const rgbColor = simpleHSVtoRGB(color)\n  switch (colorFormat) {\n    case 'NAME':\n      return toColorName(rgbColor)\n    case 'RGBI':\n    case 'RGBIA':\n      return toRGBIString(rgbColor)\n    case 'RGBP':\n    case 'RGBPA':\n      return toRGBPString(rgbColor)\n    case 'HSL':\n    case 'HSLA':\n      return toHSLString(rgbColor)\n    case 'HEX3':\n    case 'HEX6':\n    default:\n      return rgbColor.hex()\n  }\n}\n"],"file":"color_format_utils.js"}