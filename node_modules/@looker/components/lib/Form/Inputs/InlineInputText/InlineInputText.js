"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlineInputText = exports.InlineInputTextBase = void 0;

var _pick = _interopRequireDefault(require("lodash/pick"));

var _react = _interopRequireWildcard(require("react"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _InputProps = require("../InputProps");

var _innerInputStyle = require("../innerInputStyle");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var InlineInputTextLayout = (0, _react.forwardRef)((_ref, ref) => {
  var {
    className,
    onChange,
    value: valueProp,
    defaultValue,
    placeholder,
    type = 'text'
  } = _ref,
      props = _objectWithoutProperties(_ref, ["className", "onChange", "value", "defaultValue", "placeholder", "type"]);

  var [value, setValueChange] = (0, _react.useState)(valueProp || defaultValue || '');
  var displayValue = (0, _isFunction.default)(onChange) ? valueProp : value;

  var handleValueChange = event => {
    setValueChange(event.currentTarget.value);
  };

  var handleChange = (0, _isFunction.default)(onChange) ? onChange : handleValueChange;
  return _react.default.createElement("span", {
    className: className
  }, _react.default.createElement(StyledInput, _extends({
    onChange: handleChange,
    value: displayValue,
    placeholder: placeholder,
    type: type,
    ref: ref
  }, (0, _designTokens.omitStyledProps)((0, _pick.default)(props, _InputProps.inputPropKeys)))), _react.default.createElement(StyledText, null, displayValue || placeholder || ' '));
});
InlineInputTextLayout.displayName = 'InlineInputTextLayout';

var StyledInput = _styledComponents.default.input.withConfig({
  displayName: "InlineInputText__StyledInput",
  componentId: "sc-1nk1o3l-0"
})(["", " font:inherit;left:0;padding:0;position:absolute;text-align:inherit;text-transform:inherit;top:0;&::-webkit-outer-spin-button,&::-webkit-inner-spin-button{appearance:none;}&[type='number']{appearance:textfield;}"], _innerInputStyle.innerInputStyle);

var StyledText = _styledComponents.default.span.withConfig({
  displayName: "InlineInputText__StyledText",
  componentId: "sc-1nk1o3l-1"
})(["color:transparent;line-height:inherit;text-align:inherit;white-space:pre;"]);

var InlineInputTextBase = (0, _styledComponents.default)(InlineInputTextLayout).withConfig({
  displayName: "InlineInputText__InlineInputTextBase",
  componentId: "sc-1nk1o3l-2"
})(["display:inline-flex;justify-content:center;min-width:2rem;position:relative;"]);
exports.InlineInputTextBase = InlineInputTextBase;
var InlineInputText = (0, _styledComponents.default)(InlineInputTextBase).withConfig({
  displayName: "InlineInputText",
  componentId: "sc-1nk1o3l-3"
})(["", " border:none;border-bottom:1px dashed;border-bottom-color:", ";color:inherit;flex-direction:column;text-align:inherit;:focus,:hover{background-color:", ";border-bottom-color:", ";outline:none;}:focus{border-bottom-style:solid;}"], _designTokens.typography, (_ref2) => {
  var {
    theme,
    underlineOnlyOnHover,
    simple
  } = _ref2;
  return underlineOnlyOnHover || simple ? 'transparent' : theme.colors.ui3;
}, (_ref3) => {
  var {
    theme
  } = _ref3;
  return theme.colors.ui1;
}, (_ref4) => {
  var {
    theme
  } = _ref4;
  return theme.colors.key;
});
exports.InlineInputText = InlineInputText;
//# sourceMappingURL=InlineInputText.js.map