{"version":3,"sources":["../../../../src/Form/Inputs/RangeSlider/RangeSlider.tsx"],"names":["sort","arr","a","b","findClosestIndex","value","newPoint","index","closestIndex","map","p","i","distance","Math","abs","createNewValue","focusedIndex","indexToReplace","undefined","newValue","Object","assign","roundToStep","min","max","step","roundedPoint","round","calculatePointValue","mouseX","containerRect","mousePosition","left","possibleValueRange","width","boundValueProp","point","boundedPoint","console","warn","InternalRangeSlider","ref","className","id","valueProp","defaultValue","defaultValueProp","onChange","disabled","readOnly","readOnlyProp","ariaLabelledby","unintentionalReadOnly","boundedValue","setValue","containerRef","setContainerRef","focusedThumb","setFocusedThumb","mousePos","isMouseDown","prevMouseDown","minThumbRef","maxThumbRef","minValue","maxValue","minPos","maxPos","fillWidth","thumbRefs","focusChangedPoint","indexToFocus","refToFocus","requestAnimationFrame","current","focus","incrementPoint","decrementPoint","handleKeyboardNav","e","key","preventDefault","unfocusedThumb","mutationFn","focusMinThumb","focusMaxThumb","handleBlur","handleMouseEvent","maintainFocus","x","handleMouseDown","handleMouseDrag","displayName","RangeSlider","reset","space","typography","defaultProps","fontSize","lineHeight","SliderTrack","styled","div","theme","colors","ui2","ThumbLabel","keyAccent","neutral","position","Thumb","field","SliderFill","fillStart"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2020 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React, {\n  forwardRef,\n  Ref,\n  useState,\n  KeyboardEvent,\n  useRef,\n  useEffect,\n} from 'react'\nimport {\n  SpaceProps,\n  reset,\n  space,\n  typography,\n  TypographyProps,\n} from '@looker/design-tokens'\nimport { WidthProps } from 'styled-system'\nimport styled from 'styled-components'\nimport sortBy from 'lodash/sortBy'\nimport indexOf from 'lodash/indexOf'\nimport startsWith from 'lodash/startsWith'\nimport partial from 'lodash/partial'\nimport map from 'lodash/map'\nimport isEqual from 'lodash/isEqual'\nimport {\n  useMeasuredElement,\n  useMouseDragPosition,\n  usePreviousValue,\n  useReadOnlyWarn,\n} from '../../../utils'\nimport { ValidationType } from '../../ValidationMessage'\n\nexport interface RangeSliderProps\n  extends SpaceProps,\n    WidthProps,\n    TypographyProps {\n  'aria-labelledby'?: string\n  max?: number\n  min?: number\n  step?: number\n  onChange?: (value: number[]) => void\n  value?: number[]\n  defaultValue?: number[]\n  disabled?: boolean\n  id?: string\n  readOnly?: boolean\n  validationType?: ValidationType\n  className?: string\n}\n\ntype ThumbIndices = 0 | 1 | undefined\n\nconst sort = (arr: number[]) => arr.sort((a, b) => a - b)\n\n/*\n *  Takes a new number (newPoint) and decides which min or max value should be replaced\n */\nconst findClosestIndex = (value: number[], newPoint: number): number => {\n  const { index: closestIndex } = sortBy(\n    value.map((p, i) => ({\n      distance: Math.abs(p - newPoint),\n      index: i,\n    })),\n    'distance'\n  )[0]\n\n  return closestIndex\n}\n\n/*\n * Immutably updates value array with newPoint\n */\nconst createNewValue = (\n  value: number[],\n  newPoint: number,\n  focusedIndex?: ThumbIndices\n) => {\n  const indexToReplace =\n    focusedIndex === undefined\n      ? findClosestIndex(value, newPoint)\n      : focusedIndex\n\n  const newValue = Object.assign([], value, { [indexToReplace]: newPoint })\n  return sort(newValue)\n}\n\n/*\n * Takes a number and rounds it to the nearest multiple of step above the `minBound` starting value\n * Cannot exceed max value.\n */\nconst roundToStep = (\n  min: number,\n  max: number,\n  newPoint: number,\n  step: number\n) => {\n  const roundedPoint = Math.round((newPoint - min) / step) * step + min\n  return Math.max(Math.min(roundedPoint, max), min)\n}\n\n/*\n * Returns a new point value based on mouse position relative to component wrapper.\n * Cannot exceed max value.\n */\nconst calculatePointValue = (\n  mouseX: number,\n  containerRect: ClientRect,\n  min: number,\n  max: number,\n  step: number\n): number => {\n  // calculate point value based on where user clicked within container\n  const mousePosition = mouseX - containerRect.left\n  const possibleValueRange = max - min\n  const newPoint =\n    (mousePosition / containerRect.width) * possibleValueRange + min\n\n  return roundToStep(min, max, newPoint, step)\n}\n\n/*\n *Prevent value from exceeding min—max range\n */\nconst boundValueProp = (min: number, max: number, value?: number[]) => {\n  return map(value || [min, max], (point: number) => {\n    const boundedPoint = Math.max(Math.min(point, max), min)\n    if (boundedPoint !== point) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `<RangeSlider />: The value '${point}' falls outside the possible range (MIN: ${min}, MAX: ${max}). Please adjust min and max props accordingly.`\n      )\n    }\n    return boundedPoint\n  })\n}\n\nexport const InternalRangeSlider = forwardRef(\n  (\n    {\n      className,\n      id,\n      min = 0,\n      max = 10,\n      step = 1,\n      value: valueProp,\n      defaultValue: defaultValueProp,\n      onChange,\n      disabled = false,\n      readOnly: readOnlyProp = false,\n      'aria-labelledby': ariaLabelledby,\n    }: RangeSliderProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    /*\n     * Validate props and render any necessary warnings\n     * ------------------------------------------------------\n     */\n    const unintentionalReadOnly = useReadOnlyWarn(\n      'RangeSlider',\n      valueProp,\n      onChange\n    )\n    const readOnly = readOnlyProp || unintentionalReadOnly\n    // make sure value array doesn't extend past min/max bounds\n    const boundedValue = boundValueProp(min, max, valueProp || defaultValueProp)\n\n    /*\n     * Internal component state and refs\n     * ------------------------------------------------------\n     */\n    const [value, setValue] = useState(sort(boundedValue))\n    const [containerRef, setContainerRef] = useState<HTMLElement | null>(null)\n    const [focusedThumb, setFocusedThumb] = useState<ThumbIndices>()\n\n    const containerRect = useMeasuredElement(containerRef)\n\n    const { mousePos, isMouseDown } = useMouseDragPosition(containerRef)\n    const prevMouseDown = usePreviousValue(isMouseDown)\n\n    const minThumbRef = useRef<HTMLDivElement>(null)\n    const maxThumbRef = useRef<HTMLDivElement>(null)\n\n    // calculate thumb position based on set value\n    const [minValue, maxValue] = value\n    const minPos = ((minValue - min) / (max - min)) * containerRect.width\n    const maxPos = ((maxValue - min) / (max - min)) * containerRect.width\n    const fillWidth = maxPos - minPos\n\n    const thumbRefs = [minThumbRef, maxThumbRef]\n\n    /*\n     * Behavioral callbacks\n     * ------------------------------------------------------\n     */\n\n    const focusChangedPoint = (newValue: number[], newPoint: number) => {\n      // focus/highlight the thumb that moved on click\n      const indexToFocus = indexOf(newValue, newPoint)\n      const refToFocus = thumbRefs[indexToFocus]\n      requestAnimationFrame(() => {\n        // delaying focus is necessary for it to work with mouseDown event\n        refToFocus.current && refToFocus.current.focus()\n      })\n    }\n\n    const incrementPoint = (point: number) => {\n      return Math.min(point + step, max)\n    }\n\n    const decrementPoint = (point: number) => {\n      return Math.max(point - step, min)\n    }\n\n    const handleKeyboardNav = (e: KeyboardEvent) => {\n      if (!disabled && !readOnly) {\n        if (startsWith(e.key, 'Arrow') && focusedThumb !== undefined) {\n          e.preventDefault() // prevent arrows from browser window\n          const unfocusedThumb = focusedThumb === 0 ? 1 : 0\n          const mutationFn =\n            e.key === 'ArrowUp' || e.key === 'ArrowRight'\n              ? incrementPoint\n              : decrementPoint\n          const newPoint = mutationFn(value[focusedThumb])\n          const newValue = sort([newPoint, value[unfocusedThumb]])\n          focusChangedPoint(newValue, newPoint)\n          setValue(newValue)\n        }\n      }\n    }\n\n    const focusMinThumb = () => {\n      if (!disabled && !readOnly) {\n        setFocusedThumb(0)\n      }\n    }\n\n    const focusMaxThumb = () => {\n      if (!disabled && !readOnly) {\n        setFocusedThumb(1)\n      }\n    }\n\n    const handleBlur = () => {\n      setFocusedThumb(undefined)\n    }\n\n    const handleMouseEvent = (maintainFocus: boolean) => {\n      if (!disabled && !readOnly) {\n        const newPoint = calculatePointValue(\n          mousePos.x,\n          containerRect,\n          min,\n          max,\n          step\n        )\n        const newValue = createNewValue(\n          value,\n          newPoint,\n          maintainFocus ? focusedThumb : undefined\n        )\n        focusChangedPoint(newValue, newPoint)\n        setValue(newValue)\n      }\n    }\n\n    const handleMouseDown = partial(handleMouseEvent, false)\n    const handleMouseDrag = partial(handleMouseEvent, true)\n\n    /*\n     * Only fire mouse drag event when mouse moves AFTER initial click\n     */\n    useEffect(\n      () => {\n        if (isMouseDown && prevMouseDown) {\n          handleMouseDrag()\n        }\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [mousePos, isMouseDown]\n    )\n\n    /*\n     * Controlled Component: update value state when external value prop changes\n     */\n    useEffect(() => {\n      const boundedValue = boundValueProp(min, max, valueProp)\n      if (!isEqual(value, boundedValue)) {\n        setValue(sort(boundedValue))\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [valueProp])\n\n    /*\n     * Fire onChange callback when internal value changes\n     */\n    useEffect(() => {\n      if (!isEqual(value, valueProp)) {\n        onChange && onChange(value)\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value])\n\n    /*\n     * Render markup!\n     * -------------------------------------------\n     */\n\n    return (\n      <div\n        data-testid=\"range-slider-wrapper\"\n        onMouseDown={handleMouseDown}\n        className={className}\n        id={id}\n        ref={setContainerRef}\n      >\n        <SliderTrack ref={ref}>\n          <SliderFill\n            fillStart={minPos}\n            fillWidth={fillWidth}\n            disabled={disabled}\n          />\n          <ThumbLabel\n            position={minPos}\n            focus={focusedThumb === 0}\n            disabled={disabled}\n          >\n            {minValue}\n          </ThumbLabel>\n          <ThumbLabel\n            position={maxPos}\n            focus={focusedThumb === 1}\n            disabled={disabled}\n          >\n            {maxValue}\n          </ThumbLabel>\n          <Thumb\n            position={minPos}\n            tabIndex={(disabled ? '-1' : '0') as never} // \"as never\" ¯\\_(ツ)_/¯\n            onFocus={focusMinThumb}\n            onBlur={handleBlur}\n            onKeyDown={handleKeyboardNav}\n            ref={minThumbRef}\n            disabled={disabled}\n            aria-label=\"Minimum Value\"\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-disabled={disabled}\n            aria-valuenow={value[0]}\n            aria-labelledby={ariaLabelledby}\n          />\n          <Thumb\n            position={maxPos}\n            tabIndex={(disabled ? '-1' : '0') as never} // \"as never\" ¯\\_(ツ)_/¯\n            onFocus={focusMaxThumb}\n            onBlur={handleBlur}\n            onKeyDown={handleKeyboardNav}\n            ref={maxThumbRef}\n            disabled={disabled}\n            aria-label=\"Maximum Value\"\n            role=\"slider\"\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-disabled={disabled}\n            aria-valuenow={value[1]}\n            aria-labelledby={ariaLabelledby}\n          />\n        </SliderTrack>\n      </div>\n    )\n  }\n)\n\nInternalRangeSlider.displayName = 'InternalRangeSlider'\n\nexport const RangeSlider = styled(InternalRangeSlider)`\n  ${reset}\n  ${space}\n  ${typography}\n  padding: 1.5rem 0 0.5rem;\n`\n\nRangeSlider.defaultProps = { fontSize: 'small', lineHeight: 'xsmall' }\n\nconst SliderTrack = styled.div`\n  background: ${({ theme }) => theme.colors.ui2};\n  border-radius: 2px;\n  height: 4px;\n  position: relative;\n`\n\ninterface ThumbLabelProps extends TypographyProps {\n  position: number\n  focus: boolean\n  disabled: boolean\n}\n\nconst ThumbLabel = styled.div<ThumbLabelProps>`\n  background: ${({ theme, focus }) =>\n    focus ? theme.colors.keyAccent : `rgba(255, 255, 255, 0.8)`};\n  border-radius: 1rem;\n  color: ${({ theme: { colors }, disabled }) =>\n    disabled ? colors.neutral : colors.key};\n  padding: 0 0.5rem;\n  position: absolute;\n  text-align: center;\n  top: -24px;\n  transform: translateX(calc(${({ position = 0 }) => `${position}px`} - 50%));\n  user-select: none;\n  z-index: ${({ focus }) => (focus ? 1 : 0)};\n`\n\ninterface ThumbProps {\n  position: number\n  tabIndex: string\n  disabled: boolean\n}\n\nconst Thumb = styled.div<ThumbProps>`\n  background: ${({ theme }) => theme.colors.field};\n  border: 3px solid\n    ${({ theme: { colors }, disabled }) =>\n      disabled ? colors.neutral : colors.key};\n  border-radius: 100%;\n  cursor: pointer;\n  height: 16px;\n  margin-left: -8px;\n  position: absolute;\n  top: -6px;\n  transform: translateX(${({ position = 0 }) => `${position}px`});\n  width: 16px;\n  &:focus {\n    border-width: ${({ disabled }) => (disabled ? '3px' : '5px')};\n    outline: none;\n    z-index: 1;\n  }\n`\n\ninterface SliderFillProps {\n  fillStart: number\n  fillWidth: number\n  disabled: boolean\n}\n\nconst SliderFill = styled.div<SliderFillProps>`\n  background: ${({ theme: { colors }, disabled }) =>\n    disabled ? colors.neutral : colors.key};\n  height: 100%;\n  left: ${({ fillStart }) => fillStart}px;\n  position: absolute;\n  width: ${({ fillWidth }) => fillWidth}px;\n`\n"],"file":"RangeSlider.js"}