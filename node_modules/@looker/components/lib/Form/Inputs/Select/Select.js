"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Select = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Combobox = require("../Combobox");

var _SelectOptions = require("./SelectOptions");

var _options = require("./utils/options");

var _useWindowedOptions = require("./utils/useWindowedOptions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var SelectComponent = (0, _react.forwardRef)((_ref, ref) => {
  var {
    options,
    disabled,
    isFilterable,
    isClearable,
    placeholder,
    onFilter,
    onChange,
    value,
    defaultValue,
    noOptionsLabel,
    'aria-describedby': ariaDescribedby,
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledby,
    indicator,
    listLayout,
    autoResize,
    validationType,
    windowedOptions: windowedOptionsProp
  } = _ref,
      props = _objectWithoutProperties(_ref, ["options", "disabled", "isFilterable", "isClearable", "placeholder", "onFilter", "onChange", "value", "defaultValue", "noOptionsLabel", "aria-describedby", "aria-label", "aria-labelledby", "indicator", "listLayout", "autoResize", "validationType", "windowedOptions"]);

  var optionValue = (0, _options.getOption)(value, options);
  var nullDefault = (isClearable || placeholder) && !defaultValue;
  var defaultOptionValue = nullDefault ? undefined : (0, _options.getOption)(defaultValue, options) || options && (0, _options.getFirstOption)(options);

  function handleChange(option) {
    var newValue = option ? option.value : '';
    onChange && onChange(newValue);
    onFilter && onFilter('');
  }

  function handleInputChange(e) {
    onFilter && onFilter(e.currentTarget.value);
  }

  function handleClose() {
    onFilter && onFilter('');
  }

  var ariaProps = {
    'aria-describedby': ariaDescribedby,
    'aria-invalid': validationType === 'error',
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledby
  };
  var windowedOptions = (0, _useWindowedOptions.useShouldWindowOptions)(options, windowedOptionsProp);
  return _react.default.createElement(_Combobox.Combobox, _extends({
    value: optionValue,
    defaultValue: defaultOptionValue,
    onChange: handleChange,
    onClose: handleClose,
    width: autoResize ? 'auto' : '100%',
    display: autoResize ? 'inline-flex' : undefined
  }, props), _react.default.createElement(_Combobox.ComboboxInput, _extends({}, ariaProps, {
    disabled: disabled,
    placeholder: placeholder,
    validationType: validationType,
    isClearable: isClearable,
    autoComplete: false,
    autoResize: autoResize,
    readOnly: !isFilterable,
    onChange: handleInputChange,
    selectOnClick: isFilterable,
    ref: ref
  })), !disabled && _react.default.createElement(_Combobox.ComboboxList, _extends({
    persistSelection: true,
    windowedOptions: windowedOptions,
    indicator: indicator,
    width: autoResize ? 'auto' : undefined
  }, ariaProps, listLayout), _react.default.createElement(_SelectOptions.SelectOptions, {
    options: options,
    windowedOptions: windowedOptions,
    noOptionsLabel: noOptionsLabel
  })));
});
SelectComponent.displayName = 'SelectComponent';
var Select = (0, _styledComponents.default)(SelectComponent).withConfig({
  displayName: "Select",
  componentId: "sc-1grg5v4-0"
})([""]);
exports.Select = Select;
//# sourceMappingURL=Select.js.map