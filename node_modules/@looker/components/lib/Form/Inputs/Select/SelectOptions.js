"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectOptionWithDescription = SelectOptionWithDescription;
exports.SelectOptions = SelectOptions;
exports.SelectOptionGroup = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Layout = require("../../../Layout");

var _List = require("../../../List");

var _Text = require("../../../Text");

var _Combobox = require("../Combobox");

var _options = require("./utils/options");

var _useWindowedOptions = require("./utils/useWindowedOptions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var renderOption = (option, index, scrollIntoView) => {
  if (option.description) {
    return _react.default.createElement(_Combobox.ComboboxOption, _extends({}, option, {
      key: index,
      py: "xxsmall",
      scrollIntoView: scrollIntoView
    }), _react.default.createElement(SelectOptionWithDescription, option));
  }

  return _react.default.createElement(_Combobox.ComboboxOption, _extends({}, option, {
    key: index
  }));
};

var renderMultiOption = (option, index, scrollIntoView) => {
  if (option.description) {
    return _react.default.createElement(_Combobox.ComboboxMultiOption, _extends({}, option, {
      key: index,
      py: "xxsmall",
      scrollIntoView: scrollIntoView
    }), _react.default.createElement(SelectOptionWithDescription, option));
  }

  return _react.default.createElement(_Combobox.ComboboxMultiOption, _extends({}, option, {
    key: index
  }));
};

function SelectOptionWithDescription(_ref) {
  var {
    description
  } = _ref;
  return _react.default.createElement(_Layout.Box, null, _react.default.createElement(_Text.Heading, {
    fontSize: "small",
    fontWeight: "semiBold",
    pb: "xxsmall"
  }, _react.default.createElement(_Combobox.ComboboxOptionText, null)), _react.default.createElement(_Text.Paragraph, {
    variant: "subdued",
    fontSize: "small"
  }, description));
}

var SelectOptionGroupTitle = (0, _styledComponents.default)(_Text.Heading).withConfig({
  displayName: "SelectOptions__SelectOptionGroupTitle",
  componentId: "sc-8zhrcr-0"
})(["display:flex;padding-top:", ";"], (_ref2) => {
  var {
    theme
  } = _ref2;
  return theme.space.xxsmall;
});
SelectOptionGroupTitle.defaultProps = {
  fontSize: 'xxsmall',
  fontWeight: 'semiBold',
  px: 'xsmall',
  py: 'xxsmall',
  variant: 'subdued'
};

var SelectOptionGroup = (_ref3) => {
  var {
    options,
    label,
    isMulti
  } = _ref3;
  return _react.default.createElement(SelectOptionGroupContainer, null, label && _react.default.createElement(SelectOptionGroupTitle, {
    isMulti: isMulti
  }, _react.default.createElement(_Combobox.ComboboxOptionIndicator, {
    isMulti: isMulti
  }), label), options.map((option, index) => isMulti ? renderMultiOption(option, index) : renderOption(option, index)));
};

exports.SelectOptionGroup = SelectOptionGroup;

var SelectOptionGroupContainer = _styledComponents.default.div.withConfig({
  displayName: "SelectOptions__SelectOptionGroupContainer",
  componentId: "sc-8zhrcr-1"
})(["border-bottom:1px solid;border-color:", ";border-top:1px solid;padding:", " 0;&:first-child,& + div{border-top:none;}&:last-child{border-bottom:none;}"], (_ref4) => {
  var {
    theme
  } = _ref4;
  return theme.colors.ui2;
}, (_ref5) => {
  var {
    theme
  } = _ref5;
  return theme.space.xsmall;
});

function SelectOptions(_ref6) {
  var {
    options,
    isFilterable,
    showCreate,
    formatCreateLabel,
    isMulti,
    noOptionsLabel = 'No options',
    windowedOptions
  } = _ref6;
  var {
    start,
    end,
    before,
    after,
    scrollToFirst,
    scrollToLast
  } = (0, _useWindowedOptions.useWindowedOptions)(windowedOptions, options, isMulti);
  var optionsToRender = options && options.slice(start, end + 1);
  var renderToUse = isMulti ? renderMultiOption : renderOption;

  var noOptions = _react.default.createElement(_List.ListItem, {
    fontSize: "small",
    px: "medium",
    py: "xxsmall"
  }, noOptionsLabel);

  var createOption = isFilterable && showCreate && _react.default.createElement(SelectMultiCreateOption, {
    options: options,
    formatLabel: formatCreateLabel,
    noOptions: noOptions,
    key: "create"
  });

  return _react.default.createElement(_react.default.Fragment, null, options && scrollToFirst ? renderToUse(options[0], 0, true) : null, before, optionsToRender && optionsToRender.length > 0 ? [...optionsToRender.map((option, index) => {
    var optionAsGroup = option;
    var correctedIndex = index + start;
    return optionAsGroup.options ? _react.default.createElement(SelectOptionGroup, _extends({
      key: correctedIndex
    }, optionAsGroup, {
      isMulti: isMulti
    })) : renderToUse(option, correctedIndex);
  }), createOption] : createOption || noOptions, after, options && scrollToLast ? renderToUse(options[options.length - 1], 0, true) : null);
}

function SelectMultiCreateOption(_ref7) {
  var {
    options,
    noOptions,
    formatLabel
  } = _ref7;
  var {
    data: {
      inputValue,
      options: currentOptions
    }
  } = (0, _react.useContext)(_Combobox.ComboboxMultiContext);
  var shouldShow = (0, _react.useMemo)(() => {
    return (0, _options.notInOptions)(currentOptions, options, inputValue);
  }, [currentOptions, options, inputValue]);
  if (!inputValue) return null;

  if (!shouldShow) {
    if (!options || options.length === 0) return _react.default.createElement(_react.default.Fragment, null, noOptions);
    return null;
  }

  return _react.default.createElement(_Combobox.ComboboxMultiOption, {
    value: inputValue,
    highlightText: false,
    indicator: false
  }, formatLabel ? formatLabel(inputValue) : "Create \"".concat(inputValue, "\""));
}
//# sourceMappingURL=SelectOptions.js.map