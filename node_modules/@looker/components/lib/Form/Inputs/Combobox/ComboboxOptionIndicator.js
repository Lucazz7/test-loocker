"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComboboxOptionIndicator = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ComboboxContext = require("./ComboboxContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function isIndicatorFunction(children) {
  return typeof children === 'function';
}

var ComboboxOptionIndicatorLayout = (_ref) => {
  var {
    children,
    indicator: propsIndicator,
    isActive,
    isSelected,
    isMulti
  } = _ref,
      props = _objectWithoutProperties(_ref, ["children", "indicator", "isActive", "isSelected", "isMulti"]);

  var context = (0, _react.useContext)(_ComboboxContext.ComboboxContext);
  var contextMulti = (0, _react.useContext)(_ComboboxContext.ComboboxMultiContext);
  var contextToUse = isMulti ? contextMulti : context;
  var {
    indicatorPropRef
  } = contextToUse;
  var indicatorToUse = propsIndicator !== undefined ? propsIndicator : indicatorPropRef && indicatorPropRef.current;
  var option = (0, _react.useContext)(_ComboboxContext.OptionContext) || {
    value: ''
  };
  var {
    label,
    value
  } = option;
  var indicator = (0, _react.useMemo)(() => {
    var indicatorProps = {
      isActive,
      isSelected,
      label,
      value
    };

    if ((0, _react.isValidElement)(indicatorToUse)) {
      return (0, _react.cloneElement)(indicatorToUse, indicatorProps);
    } else if (isIndicatorFunction(indicatorToUse)) {
      return indicatorToUse(indicatorProps);
    }

    return indicatorToUse;
  }, [indicatorToUse, isActive, isSelected, value, label]);

  if (indicatorToUse !== undefined) {
    return _react.default.createElement(_react.default.Fragment, null, indicator);
  } else {
    return _react.default.createElement("div", props, children);
  }
};

var ComboboxOptionIndicator = (0, _styledComponents.default)(ComboboxOptionIndicatorLayout).withConfig({
  displayName: "ComboboxOptionIndicator",
  componentId: "sc-16tc35v-0"
})(["align-items:center;display:flex;flex-shrink:0;height:", ";justify-content:center;margin-right:", ";width:", ";"], props => props.theme.space.large, props => props.theme.space.xxsmall, (_ref2) => {
  var {
    theme,
    isMulti
  } = _ref2;
  return isMulti ? theme.space.xlarge : theme.space.medium;
});
exports.ComboboxOptionIndicator = ComboboxOptionIndicator;
//# sourceMappingURL=ComboboxOptionIndicator.js.map