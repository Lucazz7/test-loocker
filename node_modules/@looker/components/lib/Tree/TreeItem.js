"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TreeItem = exports.TreeItemLabel = exports.TreeItemSpace = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _omit = _interopRequireDefault(require("lodash/omit"));

var _Layout = require("../Layout");

var _Icon = require("../Icon");

var _useHovered = require("../utils/useHovered");

var _HoverDisclosure = require("../utils/HoverDisclosure");

var _utils = require("../utils");

var _TreeContext = require("./TreeContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var TreeItemLayout = (_ref) => {
  var {
    children,
    className,
    gapSize = 'xsmall',
    selected
  } = _ref,
      props = _objectWithoutProperties(_ref, ["children", "className", "gapSize", "selected"]);

  var treeContext = (0, _react.useContext)(_TreeContext.TreeContext);
  var itemRef = (0, _react.useRef)(null);
  var detailRef = (0, _react.useRef)(null);
  var [isHovered] = (0, _useHovered.useHovered)(itemRef);
  var [isFocusVisible, setFocusVisible] = (0, _react.useState)(false);

  var _Omit = (0, _omit.default)(props, ['color', 'detail', 'detailAccessory', 'detailHoverDisclosure', 'icon']),
      {
    onBlur,
    onClick,
    onKeyDown,
    onKeyUp
  } = _Omit,
      restProps = _objectWithoutProperties(_Omit, ["onBlur", "onClick", "onKeyDown", "onKeyUp"]);

  var detailAccessory = (0, _utils.undefinedCoalesce)([props.detailAccessory, treeContext.detailAccessory]);
  var detailHoverDisclosure = (0, _utils.undefinedCoalesce)([props.detailHoverDisclosure, treeContext.detailHoverDisclosure]);

  var handleClick = event => {
    if (detailRef.current && detailRef.current.contains(event.target) && detailAccessory) {
      event.stopPropagation();
      return;
    }

    setFocusVisible(false);
    onClick && onClick();
  };

  var handleKeyUp = event => {
    if (event.keyCode === 9 && event.currentTarget === event.target) setFocusVisible(true);
    onKeyUp && onKeyUp(event);
  };

  var handleKeyDown = event => {
    if (detailRef.current && detailRef.current.contains(event.target) && detailAccessory) {
      event.stopPropagation();
      return;
    }

    if (event.keyCode === 13 && event.target === event.currentTarget) {
      onClick && onClick();
    }

    onKeyDown && onKeyDown(event);
  };

  var handleBlur = event => {
    setFocusVisible(false);
    onBlur && onBlur(event);
  };

  var defaultIconSize = 12;

  var detail = _react.default.createElement(_HoverDisclosure.HoverDisclosure, {
    visible: !detailHoverDisclosure
  }, _react.default.createElement(TreeItemDetail, {
    detailAccessory: detailAccessory,
    ref: detailRef
  }, props.detail));

  return _react.default.createElement(_HoverDisclosure.HoverDisclosureContext.Provider, {
    value: {
      visible: isHovered
    }
  }, _react.default.createElement(TreeItemSpace, _extends({
    className: className,
    focusVisible: isFocusVisible,
    gap: "none",
    onBlur: handleBlur,
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp,
    ref: itemRef,
    tabIndex: onClick ? 0 : -1
  }, restProps), _react.default.createElement(TreeItemLabel, {
    gap: gapSize,
    hovered: isHovered,
    selected: selected
  }, props.icon && _react.default.createElement(PrimaryIcon, {
    name: props.icon,
    size: defaultIconSize
  }), _react.default.createElement(_Layout.FlexItem, {
    flex: "1"
  }, children), !detailAccessory && detail), detailAccessory && detail));
};

var PrimaryIcon = (0, _styledComponents.default)(_Icon.Icon).withConfig({
  displayName: "TreeItem__PrimaryIcon",
  componentId: "sc-1dl3fv3-0"
})(["opacity:0.5;"]);
var TreeItemSpace = (0, _styledComponents.default)(_Layout.Space).withConfig({
  displayName: "TreeItem__TreeItemSpace",
  componentId: "sc-1dl3fv3-1"
})(["align-items:center;border:1px solid transparent;border-color:", ";cursor:pointer;height:25px;outline:none;"], (_ref2) => {
  var {
    focusVisible,
    theme
  } = _ref2;
  return focusVisible && theme.colors.keyFocus;
});
exports.TreeItemSpace = TreeItemSpace;
var TreeItemLabel = (0, _styledComponents.default)(_Layout.Space).withConfig({
  displayName: "TreeItem__TreeItemLabel",
  componentId: "sc-1dl3fv3-2"
})(["background-color:", ";flex:1;font-size:", ";height:100%;outline:none;padding:", ";"], (_ref3) => {
  var {
    hovered,
    selected
  } = _ref3;
  return selected ? (0, _designTokens.uiTransparencyBlend)(1) : hovered && (0, _designTokens.uiTransparencyBlend)(2);
}, (_ref4) => {
  var {
    theme: {
      fontSizes
    }
  } = _ref4;
  return fontSizes.xsmall;
}, (_ref5) => {
  var {
    theme: {
      space
    }
  } = _ref5;
  return space.xxsmall;
});
exports.TreeItemLabel = TreeItemLabel;

var TreeItemDetail = _styledComponents.default.div.withConfig({
  displayName: "TreeItem__TreeItemDetail",
  componentId: "sc-1dl3fv3-3"
})(["align-items:center;display:flex;height:100%;padding-right:", ";"], (_ref6) => {
  var {
    detailAccessory,
    theme
  } = _ref6;
  return detailAccessory && theme.space.xxsmall;
});

var TreeItem = (0, _styledComponents.default)(TreeItemLayout).withConfig({
  displayName: "TreeItem",
  componentId: "sc-1dl3fv3-4"
})(["", ":first-child{", "}"], TreeItemLabel, _designTokens.color);
exports.TreeItem = TreeItem;
//# sourceMappingURL=TreeItem.js.map