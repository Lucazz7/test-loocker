import React, { ReactNode } from 'react';
import { CompatibleHTMLProps, SpacingSizes, TextColorProps } from '@looker/design-tokens';
import { IconNames } from '../Icon';
export interface TreeItemProps extends Omit<CompatibleHTMLProps<HTMLDivElement>, 'color'>, TextColorProps {
    className?: string;
    detail?: ReactNode;
    detailAccessory?: boolean;
    detailHoverDisclosure?: boolean;
    gapSize?: SpacingSizes;
    icon?: IconNames;
    onClick?: () => void;
    selected?: boolean;
}
interface TreeItemSpaceProps {
    focusVisible: boolean;
}
export declare const TreeItemSpace: import("styled-components").StyledComponent<"div", any, import("../Layout").SpaceHelperProps & TreeItemSpaceProps, never>;
interface TreeItemLabelProps {
    hovered: boolean;
    selected?: boolean;
}
export declare const TreeItemLabel: import("styled-components").StyledComponent<"div", any, import("../Layout").SpaceHelperProps & TreeItemLabelProps, never>;
export declare const TreeItem: import("styled-components").StyledComponent<React.FC<TreeItemProps>, any, {}, never>;
export {};
