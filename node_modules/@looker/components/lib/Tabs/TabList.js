"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabList = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _ = require(".");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var TabListLayout = (_ref) => {
  var {
    children,
    selectedIndex,
    onSelectTab,
    className
  } = _ref;

  var clonedChildren = _react.Children.map(children, (child, index) => {
    return (0, _react.cloneElement)(child, {
      onSelect: () => onSelectTab && onSelectTab(index),
      selected: index === selectedIndex,
      selectedIndex
    });
  });

  return _react.default.createElement("div", {
    className: className
  }, clonedChildren);
};

var distributeTabsCSS = (0, _styledComponents.css)(["column-gap:", ";display:grid;grid-gap:", ";grid-template-columns:repeat( auto-fit,minmax(", ",auto) );", "{font-size:", ";margin-left:", ";padding:", " ", " ", ";}"], props => props.theme.space.medium, props => props.theme.space.none, props => props.theme.space.xlarge, _.Tab, props => props.theme.fontSizes.xsmall, props => props.theme.space.none, props => props.theme.space.none, props => props.theme.space.medium, props => props.theme.space.xsmall);
var TabList = (0, _styledComponents.default)(TabListLayout).withConfig({
  displayName: "TabList",
  componentId: "sc-1xnjj79-0"
})(["border-bottom:1px solid ", ";", ""], props => props.theme.colors.ui2, (_ref2) => {
  var {
    distribute
  } = _ref2;
  return distribute && distributeTabsCSS;
});
exports.TabList = TabList;
//# sourceMappingURL=TabList.js.map