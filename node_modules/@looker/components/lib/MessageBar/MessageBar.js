"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageBar = void 0;

var _designTokens = require("@looker/design-tokens");

var _noop = _interopRequireDefault(require("lodash/noop"));

var _isUndefined = _interopRequireDefault(require("lodash/isUndefined"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Button = require("../Button");

var _Space = require("../Layout/Space");

var _simple = require("../Layout/utils/simple");

var _utils = require("../utils");

var _Status = require("../Status");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var NoopComponent = () => _react.default.createElement(_react.default.Fragment, null);

function getPrimaryActionButton(primaryAction) {
  switch (typeof primaryAction) {
    case 'string':
      return (_ref) => {
        var {
          onClick
        } = _ref;
        return _react.default.createElement(_Button.ButtonTransparent, {
          onClick: onClick
        }, primaryAction);
      };

    case 'object':
      return () => primaryAction;

    default:
      return (_ref2) => {
        var {
          intent,
          onClick,
          id
        } = _ref2;
        return _react.default.createElement(_Button.IconButton, {
          id: id ? "".concat(id, "-iconButton") : undefined,
          onClick: onClick,
          icon: "Close",
          size: "small",
          label: "Dismiss ".concat((0, _Status.getIntentLabel)(intent))
        });
      };
  }
}

function getSecondaryActionButton(secondaryAction) {
  switch (typeof secondaryAction) {
    case 'string':
      return (_ref3) => {
        var {
          onClick
        } = _ref3;
        return _react.default.createElement(_Button.ButtonTransparent, {
          onClick: onClick,
          color: "neutral"
        }, secondaryAction);
      };

    case 'object':
      return () => secondaryAction;

    default:
      return NoopComponent;
  }
}

var MessageBarLayout = (0, _react.forwardRef)((_ref4, ref) => {
  var {
    id,
    children,
    intent = 'inform',
    visible: visibleProp,
    onPrimaryClick = _noop.default,
    onSecondaryClick = _noop.default,
    primaryAction,
    secondaryAction,
    noActions = false
  } = _ref4,
      props = _objectWithoutProperties(_ref4, ["id", "children", "intent", "visible", "onPrimaryClick", "onSecondaryClick", "primaryAction", "secondaryAction", "noActions"]);

  (0, _utils.useReadOnlyWarn)('MessageBar', visibleProp, onPrimaryClick);
  var [visible, setVisible] = (0, _react.useState)((0, _isUndefined.default)(visibleProp) ? true : visibleProp);

  var handlePrimaryClick = () => {
    setVisible(visibleProp || false);
    onPrimaryClick();
  };

  var handleSecondaryClick = () => {
    setVisible(visibleProp || false);
    onSecondaryClick();
  };

  (0, _react.useEffect)(() => {
    if (!(0, _isUndefined.default)(visibleProp)) {
      setVisible(visibleProp);
    }
  }, [visibleProp]);
  var PrimaryButton = getPrimaryActionButton(primaryAction);
  var SecondaryButton = getSecondaryActionButton(secondaryAction);

  var messageBarMarkup = _react.default.createElement("div", _extends({
    "aria-live": "polite",
    ref: ref,
    role: "status"
  }, (0, _designTokens.omitStyledProps)(props)), _react.default.createElement(_Status.Status, {
    intent: intent
  }), _react.default.createElement(MessageBarContent, null, children), !noActions && _react.default.createElement(_Space.Space, null, _react.default.createElement(SecondaryButton, {
    onClick: handleSecondaryClick
  }), _react.default.createElement(PrimaryButton, {
    intent: intent,
    onClick: handlePrimaryClick,
    id: id
  })));

  return visible ? messageBarMarkup : null;
});
MessageBarLayout.displayName = 'MessageBarLayout';
var MessageBar = (0, _styledComponents.default)(MessageBarLayout).withConfig({
  displayName: "MessageBar",
  componentId: "sc-11gt222-0"
})(["", " align-items:center;background:", ";border-radius:", ";display:grid;font-size:", ";grid-template-columns:auto 1fr auto;"], _simple.simpleLayoutCSS, (_ref5) => {
  var {
    intent,
    theme: {
      colors
    }
  } = _ref5;
  return intent === 'critical' ? colors.criticalAccent : colors.neutralAccent;
}, (_ref6) => {
  var {
    theme: {
      radii
    }
  } = _ref6;
  return radii.medium;
}, (_ref7) => {
  var {
    theme: {
      fontSizes
    }
  } = _ref7;
  return fontSizes.small;
});
exports.MessageBar = MessageBar;

var MessageBarContent = _styledComponents.default.div.withConfig({
  displayName: "MessageBar__MessageBarContent",
  componentId: "sc-11gt222-1"
})(["flex:1;margin-left:", ";"], (_ref8) => {
  var {
    theme: {
      space
    }
  } = _ref8;
  return space.large;
});

MessageBar.defaultProps = {
  px: 'medium',
  py: 'small',
  width: '100%'
};
//# sourceMappingURL=MessageBar.js.map