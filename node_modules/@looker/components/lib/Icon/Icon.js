"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Icon = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _icons = require("@looker/icons");

var _simple = require("../Layout/utils/simple");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var IconLayout = (0, _react.forwardRef)((_ref, ref) => {
  var {
    artwork = undefined,
    title,
    name
  } = _ref,
      props = _objectWithoutProperties(_ref, ["artwork", "title", "name"]);

  if (artwork && name || !artwork && !name) {
    console.warn('You may only specify name OR artwork, not both.');
  }

  var Glyph = name ? _icons.Glyphs[name] : 'div';

  var value = artwork || _react.default.createElement(Glyph, {
    width: "100%",
    height: "100%",
    fill: "currentColor",
    title: title
  });

  return _react.default.createElement("div", _extends({
    ref: ref,
    "aria-hidden": title === undefined && true
  }, (0, _designTokens.omitStyledProps)(props)), value);
});
IconLayout.displayName = 'IconLayout';
var Icon = (0, _styledComponents.default)(IconLayout).withConfig({
  displayName: "Icon",
  componentId: "sc-7y0t4i-0"
})(["", " ", " align-items:center;flex-shrink:0;svg{height:100%;width:100%;}"], _simple.sizeSimpleLayoutCSS, _designTokens.color);
exports.Icon = Icon;
Icon.defaultProps = {
  display: 'inline-flex',
  size: 'medium'
};
//# sourceMappingURL=Icon.js.map