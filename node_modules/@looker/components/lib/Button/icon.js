"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttonIcon = exports.ButtonIcon = exports.iconSizes = exports.iconMargins = void 0;

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _polished = require("polished");

var _Icon = require("../Icon");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var iconMargins = props => {
  var spacing = {
    inner: 0,
    outer: 0
  };

  switch (props.size) {
    case 'xxsmall':
    case 'xsmall':
      spacing.outer = 4;
      spacing.inner = 6;
      break;

    case 'small':
      spacing.outer = 8;
      spacing.inner = 8;
      break;

    case 'large':
    default:
      spacing.outer = 12;
      spacing.inner = 8;
  }

  if (props.iconBefore) {
    return (0, _styledComponents.css)(["margin-left:-", ";margin-right:", ";"], (0, _polished.rem)(spacing.outer), (0, _polished.rem)(spacing.inner));
  } else if (props.iconAfter) {
    return (0, _styledComponents.css)(["margin-left:", ";margin-right:-", ";"], (0, _polished.rem)(spacing.inner), (0, _polished.rem)(spacing.outer));
  } else {
    return false;
  }
};

exports.iconMargins = iconMargins;

var iconSizes = props => {
  var iconSize = 18;

  switch (props.size) {
    case 'xxsmall':
    case 'xsmall':
      iconSize = 12;
      break;

    case 'small':
      iconSize = 16;
      break;

    case 'large':
      iconSize = 20;
      break;

    case 'medium':
    default:
      iconSize = 18;
  }

  return (0, _styledComponents.css)(["height:", "px;width:", "px;"], iconSize, iconSize);
};

exports.iconSizes = iconSizes;
var ButtonIcon = (0, _styledComponents.default)(_Icon.Icon).withConfig({
  displayName: "icon__ButtonIcon",
  componentId: "zv4n08-0"
})([""]);
exports.ButtonIcon = ButtonIcon;

var buttonIcon = props => (0, _styledComponents.css)(["", "{", " ", "}"], ButtonIcon, iconMargins(props), iconSizes(props));

exports.buttonIcon = buttonIcon;
//# sourceMappingURL=icon.js.map