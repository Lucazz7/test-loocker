"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonToggle = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ButtonItem = require("./ButtonItem");

var _ButtonSet = require("./ButtonSet");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ButtSetAsToggle = _ButtonSet.ButtonSet;
var ButtonToggleLayout = (0, _react.forwardRef)((_ref, ref) => {
  var {
    nullable,
    onChange,
    value = ''
  } = _ref,
      props = _objectWithoutProperties(_ref, ["nullable", "onChange", "value"]);

  function handleItemClick(e) {
    var newValue = e.currentTarget.value;
    var deselecting = newValue === value;

    if (!deselecting || nullable) {
      if (onChange) {
        onChange(deselecting ? '' : newValue);
      }
    }
  }

  return _react.default.createElement(ButtSetAsToggle, _extends({}, props, {
    value: value,
    onItemClick: handleItemClick,
    ref: ref
  }));
});
ButtonToggleLayout.displayName = 'ButtonToggleLayout';
var ButtonToggle = (0, _styledComponents.default)(ButtonToggleLayout).withConfig({
  displayName: "ButtonToggle",
  componentId: "sc-8vwxgq-0"
})(["background-color:", ";border:solid 1px ", ";border-left-width:0;border-radius:", ";", "{border-left:solid 1px ", ";height:", "px;&:last-child{border-bottom-right-radius:", ";border-top-right-radius:", ";}&:first-child{border-bottom-left-radius:", ";border-top-left-radius:", ";}&:focus{position:relative;}}&.wrapping{background-image:linear-gradient( 0deg,", " 0,", " 1px,transparent 1px,transparent 100% ),repeating-linear-gradient( 180deg,transparent,transparent 35px,", " 35px,", " ", "px );&::after{border-left:1px solid ", ";content:'';flex-grow:100;height:", "px;}", "{flex-grow:1;&:first-child{border-bottom-left-radius:0;}&:last-child{border-bottom-right-radius:0;border-top-right-radius:0;}&[aria-pressed='false']:hover:not(:focus),&[aria-pressed='true']:not(:focus){box-shadow:inset 0 -1px 0 0 ", ";}}}"], (_ref2) => {
  var {
    theme
  } = _ref2;
  return theme.colors.background;
}, (_ref3) => {
  var {
    theme
  } = _ref3;
  return theme.colors.ui2;
}, (_ref4) => {
  var {
    theme
  } = _ref4;
  return theme.radii.medium;
}, _ButtonItem.ButtonItem, (_ref5) => {
  var {
    theme
  } = _ref5;
  return theme.colors.ui2;
}, _ButtonItem.buttonItemHeight, (_ref6) => {
  var {
    theme
  } = _ref6;
  return theme.radii.medium;
}, (_ref7) => {
  var {
    theme
  } = _ref7;
  return theme.radii.medium;
}, (_ref8) => {
  var {
    theme
  } = _ref8;
  return theme.radii.medium;
}, (_ref9) => {
  var {
    theme
  } = _ref9;
  return theme.radii.medium;
}, (_ref10) => {
  var {
    theme
  } = _ref10;
  return theme.colors.background;
}, (_ref11) => {
  var {
    theme
  } = _ref11;
  return theme.colors.background;
}, (_ref12) => {
  var {
    theme
  } = _ref12;
  return theme.colors.ui2;
}, (_ref13) => {
  var {
    theme
  } = _ref13;
  return theme.colors.ui2;
}, _ButtonItem.buttonItemHeight, (_ref14) => {
  var {
    theme
  } = _ref14;
  return theme.colors.ui2;
}, _ButtonItem.buttonItemHeight, _ButtonItem.ButtonItem, (_ref15) => {
  var {
    theme
  } = _ref15;
  return theme.colors.ui2;
});
exports.ButtonToggle = ButtonToggle;
//# sourceMappingURL=ButtonToggle.js.map