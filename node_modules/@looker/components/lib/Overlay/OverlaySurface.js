"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OverlaySurface = void 0;

var _designTokens = require("@looker/design-tokens");

var _react = _interopRequireWildcard(require("react"));

var _reactHotkeys = require("react-hotkeys");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Dialog = require("../Dialog");

var _OverlaySurfaceArrow = require("./OverlaySurfaceArrow");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var OverlaySurface = (0, _react.forwardRef)((props, ref) => {
  var {
    arrow,
    arrowProps,
    children,
    eventHandlers,
    placement,
    style
  } = props,
      innerProps = _objectWithoutProperties(props, ["arrow", "arrowProps", "children", "eventHandlers", "placement", "style"]);

  var {
    closeModal
  } = (0, _react.useContext)(_Dialog.DialogContext);
  return _react.default.createElement(Outer, _extends({
    ref: ref,
    style: style
  }, eventHandlers, {
    tabIndex: -1,
    "data-placement": placement
  }), _react.default.createElement(_reactHotkeys.HotKeys, {
    className: "hotkeys",
    keyMap: {
      CLOSE_MODAL: {
        action: 'keyup',
        name: 'Close Modal',
        sequence: 'esc'
      }
    },
    handlers: {
      CLOSE_MODAL: () => closeModal()
    }
  }, _react.default.createElement(Inner, innerProps, children, arrow !== false && _react.default.createElement(_OverlaySurfaceArrow.OverlaySurfaceArrow, _extends({
    "data-placement": placement
  }, innerProps, arrowProps)))));
});
exports.OverlaySurface = OverlaySurface;
OverlaySurface.displayName = 'OverlaySurface';

var Outer = _styledComponents.default.div.withConfig({
  displayName: "OverlaySurface__Outer",
  componentId: "wd3uv8-0"
})(["", " animation:", " 150ms ease-in;overflow:visible;z-index:", ";&[data-placement*='top']{padding-bottom:", ";}&[data-placement*='right']{padding-left:", ";}&[data-placement*='bottom']{padding-top:", ";}&[data-placement*='left']{padding-right:", ";}&:focus{outline:none;}& > div.hotkeys:focus{outline:none;}"], _designTokens.reset, _designTokens.fadeIn, (_ref) => {
  var {
    theme: {
      zIndexFloor
    }
  } = _ref;
  return zIndexFloor || undefined;
}, (_ref2) => {
  var {
    theme: {
      space
    }
  } = _ref2;
  return space.xsmall;
}, (_ref3) => {
  var {
    theme: {
      space
    }
  } = _ref3;
  return space.xsmall;
}, (_ref4) => {
  var {
    theme: {
      space
    }
  } = _ref4;
  return space.xsmall;
}, (_ref5) => {
  var {
    theme: {
      space
    }
  } = _ref5;
  return space.xsmall;
});

var Inner = _styledComponents.default.div.withConfig({
  displayName: "OverlaySurface__Inner",
  componentId: "wd3uv8-1"
})(["", " ", " ", " ", " &:focus{outline:none;}"], _designTokens.reset, _designTokens.border, _designTokens.boxShadow, _designTokens.color);
//# sourceMappingURL=OverlaySurface.js.map