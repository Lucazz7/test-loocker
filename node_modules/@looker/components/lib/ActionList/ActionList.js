"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionList = exports.ActionListLayout = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _ActionListHeader = require("./ActionListHeader");

var _ActionListItemColumn = require("./ActionListItemColumn");

var _ActionListRow = require("./ActionListRow");

var _ActionListCheckbox = require("./ActionListCheckbox");

var _ActionListContext = require("./ActionListContext");

var _ActionListHeaderColumn = require("./ActionListHeader/ActionListHeaderColumn");

var _actionListFormatting = require("./utils/actionListFormatting");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionListLayout = (_ref) => {
  var {
    canSelect = false,
    className,
    header = true,
    children,
    columns,
    itemsSelected = [],
    onClickRowSelect = false,
    onSelect,
    onSelectAll,
    onSort
  } = _ref;
  var [allItems, setAllItems] = (0, _react.useState)([]);
  var allSelected = !!allItems.length && allItems.every(item => itemsSelected.includes(item)) ? true : allItems.some(item => itemsSelected.includes(item)) ? 'mixed' : false;

  var addItemToAllItems = id => {
    !allItems.includes(id) && setAllItems([...allItems, id]);
  };

  var handleSelectAll = onSelectAll ? () => onSelectAll() : undefined;
  var context = {
    addItemToAllItems,
    allSelected,
    canSelect: !!canSelect,
    columns,
    itemsSelected,
    onClickRowSelect,
    onSelect,
    onSelectAll: handleSelectAll,
    onSort
  };
  var actionListHeader = header === true ? _react.default.createElement(_ActionListHeader.ActionListHeader, null, (0, _ActionListHeader.generateActionListHeaderColumns)(columns)) : header === false ? null : _react.default.createElement(_ActionListHeader.ActionListHeader, null, header);
  return _react.default.createElement(_ActionListContext.ActionListContext.Provider, {
    value: context
  }, _react.default.createElement("div", {
    className: className
  }, actionListHeader, _react.default.createElement("div", null, children)));
};

exports.ActionListLayout = ActionListLayout;
var ActionList = (0, _styledComponents.default)(ActionListLayout).withConfig({
  displayName: "ActionList",
  componentId: "sc-18vcw12-0"
})(["", "{align-items:center;display:grid;grid-template-columns:", ";}", ":first-child{padding-left:", ";}", ":first-child{padding-left:", ";}", ",", "{display:flex;padding:", ";}", "{padding-left:", ";}", " ", ""], _ActionListRow.ActionListRowColumns, props => props.columns.map(column => "".concat(column.widthPercent, "%")).join(' '), _ActionListItemColumn.ActionListItemColumn, (_ref2) => {
  var {
    canSelect,
    theme
  } = _ref2;
  return canSelect ? theme.space.none : undefined;
}, _ActionListHeaderColumn.ActionListHeaderColumn, (_ref3) => {
  var {
    canSelect,
    theme
  } = _ref3;
  return canSelect ? theme.space.none : undefined;
}, _ActionListItemColumn.ActionListItemColumn, _ActionListHeaderColumn.ActionListHeaderColumn, props => props.theme.space.small, _ActionListHeader.ActionListHeader, (_ref4) => {
  var {
    canSelect
  } = _ref4;
  return typeof canSelect === 'object' && canSelect.all === false && _ActionListCheckbox.actionListCheckboxWidth;
}, (_ref5) => {
  var {
    columns
  } = _ref5;
  return (0, _actionListFormatting.numericColumnCSS)((0, _actionListFormatting.getNumericColumnIndices)(columns));
}, (_ref6) => {
  var {
    columns
  } = _ref6;
  return (0, _actionListFormatting.primaryKeyColumnCSS)((0, _actionListFormatting.getPrimaryKeyColumnIndices)(columns));
});
exports.ActionList = ActionList;
//# sourceMappingURL=ActionList.js.map