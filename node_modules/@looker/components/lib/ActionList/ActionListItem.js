"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionListItem = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _Button = require("../Button");

var _Menu = require("../Menu");

var _ActionListRow = require("./ActionListRow");

var _ActionListContext = require("./ActionListContext");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionListItemInternal = (_ref) => {
  var {
    actions,
    actionsTooltip = 'Options',
    children,
    className,
    disabled,
    id,
    onClick
  } = _ref;
  var actionListItemRef = (0, _react.useRef)(null);
  var {
    addItemToAllItems,
    canSelect,
    itemsSelected,
    onSelect,
    onClickRowSelect
  } = (0, _react.useContext)(_ActionListContext.ActionListContext);
  (0, _react.useEffect)(() => {
    addItemToAllItems(id);
  }, [addItemToAllItems, id]);

  var handleOnSelect = () => onClickRowSelect && onSelect && onSelect(id);

  var handleClick = disabled ? undefined : onClickRowSelect ? handleOnSelect : onClick || undefined;

  var handleMenuClick = event => {
    event.stopPropagation();
  };

  var handleKeyDown = event => {
    var isEventFromChild = event.currentTarget !== event.target;

    if (event.keyCode === 13 && !isEventFromChild) {
      event.currentTarget.click();
    }
  };

  var itemActions = actions && _react.default.createElement("div", {
    onClick: handleMenuClick
  }, _react.default.createElement(_Menu.Menu, {
    hoverDisclosureRef: actionListItemRef
  }, _react.default.createElement(_Menu.MenuDisclosure, {
    tooltip: actionsTooltip
  }, _react.default.createElement(_Button.IconButton, {
    icon: "DotsVert",
    label: actionsTooltip,
    size: "medium"
  })), _react.default.createElement(_Menu.MenuList, null, actions)));

  var onChange = onSelect ? () => onSelect(id) : undefined;
  return _react.default.createElement(_ActionListRow.ActionListRow, {
    className: className,
    secondary: itemActions,
    ref: actionListItemRef,
    onClick: handleClick,
    onKeyDown: handleKeyDown,
    tabIndex: 0,
    hasCheckbox: !!canSelect,
    onChange: onChange,
    checked: itemsSelected.includes(id),
    disabled: disabled,
    supportsRaised: !onClickRowSelect
  }, children);
};

var ActionListItem = (0, _styledComponents.default)(ActionListItemInternal).withConfig({
  displayName: "ActionListItem",
  componentId: "sc-1au6pwj-0"
})(["border-bottom:solid 1px ", ";display:flex;"], props => props.theme.colors.ui2);
exports.ActionListItem = ActionListItem;
//# sourceMappingURL=ActionListItem.js.map