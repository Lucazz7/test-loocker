"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionListManager = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Spinner = require("../Spinner");

var _NoResults = require("./NoResults");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionListManagerLayout = (_ref) => {
  var {
    children,
    className,
    isLoading,
    noResults,
    noResultsText
  } = _ref;

  if (isLoading) {
    children = _react.default.createElement(_Spinner.Spinner, null);
  } else if (noResults) {
    children = _react.default.createElement(_NoResults.NoResults, null, noResultsText || 'No Results');
  }

  return _react.default.createElement("div", {
    className: className
  }, children);
};

var centerItemStates = (0, _styledComponents.css)(["align-items:center;display:flex;justify-content:center;min-height:8rem;"]);
var ActionListManager = (0, _styledComponents.default)(ActionListManagerLayout).withConfig({
  displayName: "ActionListManager",
  componentId: "kep5z8-0"
})(["", ""], (_ref2) => {
  var {
    isLoading,
    noResults
  } = _ref2;
  return (isLoading || noResults) && centerItemStates;
});
exports.ActionListManager = ActionListManager;
//# sourceMappingURL=ActionListManager.js.map