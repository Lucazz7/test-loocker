"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionListHeaderColumn = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ActionListContext = require("../ActionListContext");

var _Icon = require("../../Icon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ActionListHeaderColumnLayout = (0, _react.forwardRef)((_ref, ref) => {
  var {
    className,
    children,
    id
  } = _ref;
  var {
    columns,
    onSort
  } = (0, _react.useContext)(_ActionListContext.ActionListContext);
  var columnInfo = columns && columns.find(column => column.id === id);
  var canSort = columnInfo && columnInfo.canSort;

  var handleClick = () => {
    if (onSort && columnInfo && columnInfo.canSort) {
      onSort(id, columnInfo.sortDirection === 'asc' ? 'desc' : 'asc');
    }
  };

  return _react.default.createElement("div", {
    className: className,
    onClick: handleClick,
    ref: ref,
    style: {
      cursor: canSort ? 'pointer' : undefined
    }
  }, children, columnInfo && columnInfo.sortDirection ? _react.default.createElement(_Icon.Icon, {
    ml: columnInfo.type === 'string' ? 'xxsmall' : undefined,
    mr: columnInfo.type === 'number' ? 'xxsmall' : undefined,
    name: columnInfo.sortDirection === 'asc' ? 'CaretUp' : 'CaretDown'
  }) : null);
});
ActionListHeaderColumnLayout.displayName = 'ActionListHeaderColumnLayout';
var ActionListHeaderColumn = (0, _styledComponents.default)(ActionListHeaderColumnLayout).withConfig({
  displayName: "ActionListHeaderColumn",
  componentId: "ledia9-0"
})(["align-items:center;display:flex;word-break:break-all;"]);
exports.ActionListHeaderColumn = ActionListHeaderColumn;
//# sourceMappingURL=ActionListHeaderColumn.js.map