{"version":3,"sources":["../../src/utils/useScrollLock.ts"],"names":["setBodyOverflowHidden","document","body","style","overflow","useScrollLock","enabled","useCapture","allowScrollWithin","newElement","callbackRef","element","disableScrollLock","enableScrollLock","DialogContext","value","setOn","setOff","bodyOverflowRef","window","scrollTop","scrollY","scrollTarget","bodyOverflowCurrent","current","setBodyOverflowOnce","stopScroll","e","target","Element","contains","scrollTo","top","addEventListener","removeEventListener","disable","enable","isEnabled"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2020 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport once from 'lodash/once'\nimport { useContext, useEffect, useRef } from 'react'\nimport { DialogContext } from '../Dialog/DialogContext'\nimport { useToggle } from './useToggle'\nimport { useCallbackRef } from './useCallbackRef'\n\nfunction setBodyOverflowHidden() {\n  if (typeof document !== 'undefined') {\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nexport function useScrollLock(\n  enabled = false,\n  useCapture = false,\n  allowScrollWithin?: HTMLElement | null\n) {\n  const [newElement, callbackRef] = useCallbackRef()\n  // If the keepFocusWithin is passed in arguments, use that instead of the new element\n  const element =\n    typeof allowScrollWithin === 'undefined' ? newElement : allowScrollWithin\n  const { disableScrollLock, enableScrollLock } = useContext(DialogContext)\n  const { value, setOn, setOff } = useToggle(enabled)\n\n  // save the existing body overflow value\n  const bodyOverflowRef = useRef(\n    typeof document !== 'undefined' ? document.body.style.overflow : ''\n  )\n\n  useEffect(() => {\n    if (typeof document === 'undefined' || typeof window === 'undefined') return\n\n    let scrollTop = window.scrollY\n    let scrollTarget: EventTarget | HTMLElement | null = document\n\n    const bodyOverflowCurrent = bodyOverflowRef.current\n    const setBodyOverflowOnce = once(setBodyOverflowHidden)\n\n    function stopScroll(e: Event) {\n      // setting overflow: hidden again here avoids conflicting enable / disable with nested scroll locks\n      setBodyOverflowOnce()\n\n      if (e.target !== null && e.target !== scrollTarget) {\n        scrollTarget = e.target\n        scrollTop =\n          scrollTarget instanceof Element\n            ? scrollTarget.scrollTop\n            : window.scrollY\n      }\n      if (\n        scrollTarget instanceof Element &&\n        !(element && element.contains(scrollTarget))\n      ) {\n        scrollTarget.scrollTop = scrollTop\n      } else if (scrollTarget === document) {\n        window.scrollTo({ top: scrollTop })\n      }\n    }\n\n    if (element && value) {\n      window.addEventListener('scroll', stopScroll, true)\n      disableScrollLock && disableScrollLock()\n      setBodyOverflowHidden()\n    } else {\n      window.removeEventListener('scroll', stopScroll, true)\n      enableScrollLock && enableScrollLock()\n      document.body.style.overflow = bodyOverflowCurrent\n    }\n\n    return () => {\n      window.removeEventListener('scroll', stopScroll, true)\n      document.body.style.overflow = bodyOverflowCurrent\n    }\n  }, [value, element, useCapture, disableScrollLock, enableScrollLock])\n\n  return {\n    callbackRef,\n    disable: setOff,\n    element: element || null,\n    enable: setOn,\n    isEnabled: value,\n  }\n}\n"],"file":"useScrollLock.js"}