"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useMouseDragPosition = useMouseDragPosition;

var _react = require("react");

var _throttle = _interopRequireDefault(require("lodash/throttle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function useMouseDragPosition(targetRef) {
  var [isMouseDown, setIsMouseDown] = (0, _react.useState)(false);
  var [mousePos, setMousePos] = (0, _react.useState)({
    x: 0,
    y: 0
  });

  var handleMouseDown = e => {
    setMousePos({
      x: e.pageX,
      y: e.pageY
    });
    setIsMouseDown(true);
  };

  var handleMouseUp = () => {
    setIsMouseDown(false);
  };

  var handleMouseMove = (0, _throttle.default)(e => {
    if (isMouseDown) {
      setMousePos({
        x: e.pageX || e.clientX,
        y: e.pageY || e.clientY
      });
    }
  }, 50);

  var handleMouseLeave = () => {
    setIsMouseDown(false);
  };

  (0, _react.useEffect)(() => {
    targetRef && targetRef.addEventListener('mousedown', handleMouseDown);
    window.addEventListener('mouseup', handleMouseUp);
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('handleMouseLeave', handleMouseLeave);
    return () => {
      targetRef && targetRef.removeEventListener('mousedown', handleMouseDown);
      window.removeEventListener('mouseup', handleMouseUp);
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('handleMouseLeave', handleMouseLeave);
    };
  }, [isMouseDown, targetRef]);
  return {
    isMouseDown,
    mousePos: mousePos
  };
}
//# sourceMappingURL=useMouseDragPosition.js.map