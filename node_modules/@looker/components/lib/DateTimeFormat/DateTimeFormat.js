"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateTimeFormat = void 0;

var _react = _interopRequireDefault(require("react"));

var _repeat = _interopRequireDefault(require("lodash/repeat"));

var _trim = _interopRequireDefault(require("lodash/trim"));

var _i18n = require("../utils/i18n");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateTimeFormat = (_ref) => {
  var {
    children = new Date(Date.now()),
    date,
    format = 'medium',
    locale = _i18n.Locales.English,
    time,
    timeZone
  } = _ref;
  var repetitions = {
    full: 4,
    long: 3,
    medium: 2,
    short: 1
  };
  var dateFormat = (0, _repeat.default)('P', repetitions[format]);
  var timeFormat = (0, _repeat.default)('p', repetitions[format]);
  var timeZoneFormat = (0, _repeat.default)('z', repetitions[format]);
  var combinedDateTimeFormat = (0, _trim.default)("".concat(date ? dateFormat : '').concat(time ? timeFormat : '', " ").concat(timeZone ? timeZoneFormat : ''));

  try {
    return _react.default.createElement(_react.default.Fragment, null, (0, _i18n.formatDateString)(children, locale, combinedDateTimeFormat, timeZone));
  } catch (error) {
    return _react.default.createElement(_react.default.Fragment, null, error);
  }
};

exports.DateTimeFormat = DateTimeFormat;
DateTimeFormat.defaultProps = {
  date: true,
  format: 'medium',
  time: true
};
//# sourceMappingURL=DateTimeFormat.js.map