"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuList = exports.MenuListInternal = void 0;

var _omit = _interopRequireDefault(require("lodash/omit"));

var _react = _interopRequireWildcard(require("react"));

var _reactHotkeys = require("react-hotkeys");

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _styledSystem = require("styled-system");

var _designTokens = require("@looker/design-tokens");

var _Popover = require("../Popover");

var _MenuContext = require("./MenuContext");

var _MenuGroup = require("./MenuGroup");

var _moveFocus = require("./moveFocus");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var MenuListInternal = (0, _react.forwardRef)((_ref, ref) => {
  var {
    children,
    compact,
    disabled,
    pin,
    placement
  } = _ref,
      props = _objectWithoutProperties(_ref, ["children", "compact", "disabled", "pin", "placement"]);

  var {
    id,
    isOpen,
    setOpen,
    triggerElement
  } = (0, _react.useContext)(_MenuContext.MenuContext);
  var [renderIconPlaceholder, setRenderIconPlaceholder] = (0, _react.useState)(false);
  var innerRef = (0, _react.useRef)(null);
  var context = {
    compact,
    renderIconPlaceholder,
    setRenderIconPlaceholder
  };

  var menuList = _react.default.createElement(_MenuContext.MenuItemContext.Provider, {
    value: context
  }, _react.default.createElement(_reactHotkeys.HotKeys, {
    innerRef: innerRef,
    keyMap: {
      MOVE_DOWN: 'down',
      MOVE_UP: 'up'
    },
    handlers: {
      MOVE_DOWN: () => (0, _moveFocus.moveFocus)(1, 0, innerRef),
      MOVE_UP: () => (0, _moveFocus.moveFocus)(-1, -1, innerRef)
    },
    style: {
      borderRadius: 'inherit'
    }
  }, _react.default.createElement("ul", _extends({
    ref: ref,
    tabIndex: -1,
    role: "menu",
    id: id,
    "aria-labelledby": id && "button-".concat(id)
  }, (0, _designTokens.omitStyledProps)((0, _omit.default)(props, 'groupDividers'))), children)));

  var isMenu = isOpen !== undefined;
  var {
    popover
  } = (0, _Popover.usePopover)({
    content: menuList,
    isOpen,
    pin,
    placement,
    setOpen,
    triggerElement
  });
  if (disabled) return null;
  if (isMenu) return popover || null;
  return menuList;
});
exports.MenuListInternal = MenuListInternal;

var dividersStyle = (_ref2) => {
  var {
    groupDividers = true
  } = _ref2;
  return groupDividers && (0, _styledComponents.css)(["", " ~ ", "{border-top:1px solid ", ";}"], _MenuGroup.MenuGroup, _MenuGroup.MenuGroup, (_ref3) => {
    var {
      theme: {
        colors
      }
    } = _ref3;
    return colors.ui2;
  });
};

var MenuList = (0, _styledComponents.default)(MenuListInternal).withConfig({
  displayName: "MenuList",
  componentId: "sc-1m0jggd-0"
})(["", " ", " ", " ", " ", " ", " ", " border-radius:inherit;list-style:none;outline:none;overflow:auto;user-select:none;", ""], _designTokens.reset, _styledSystem.height, _styledSystem.minHeight, _styledSystem.maxHeight, _styledSystem.minWidth, _styledSystem.maxWidth, _styledSystem.width, dividersStyle);
exports.MenuList = MenuList;
MenuList.defaultProps = {
  minWidth: '12rem'
};
//# sourceMappingURL=MenuList.js.map