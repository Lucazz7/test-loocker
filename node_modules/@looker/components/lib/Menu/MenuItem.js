"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuItem = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireWildcard(require("react"));

var _useID = require("../utils/useID");

var _Icon = require("../Icon");

var _MenuContext = require("./MenuContext");

var _MenuItemLayout = require("./MenuItemLayout");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MenuItemInternal = props => {
  var {
    children,
    className,
    compact: propCompact,
    current,
    detail,
    disabled,
    href,
    icon,
    itemRole,
    onBlur,
    onClick,
    onKeyUp,
    target
  } = props;
  var [isFocusVisible, setFocusVisible] = (0, _react.useState)(false);
  var {
    compact: contextCompact
  } = (0, _react.useContext)(_MenuContext.MenuItemContext);
  var compact = propCompact === undefined ? contextCompact : propCompact;

  var handleOnKeyUp = event => {
    setFocusVisible(true);
    onKeyUp && onKeyUp(event);
  };

  var handleOnBlur = event => {
    setFocusVisible(false);
    onBlur && onBlur(event);
  };

  var {
    setOpen
  } = (0, _react.useContext)(_MenuContext.MenuContext);

  var handleOnClick = event => {
    setFocusVisible(false);
    onClick && onClick(event);

    if (setOpen && !event.defaultPrevented) {
      setOpen(false);
    }
  };

  var {
    renderIconPlaceholder,
    setRenderIconPlaceholder
  } = (0, _react.useContext)(_MenuContext.MenuItemContext);
  (0, _react.useEffect)(() => {
    icon && setRenderIconPlaceholder(true);
  }, [icon, setRenderIconPlaceholder]);
  var renderedIconID = (0, _useID.useID)(props.id);
  var renderedIcon = icon ? _react.default.createElement(_Icon.Icon, {
    name: icon,
    mr: "xsmall",
    size: 24 / (compact ? 1.25 : 1),
    color: "text6"
  }) : renderIconPlaceholder && _react.default.createElement("div", {
    "data-testid": "menu-item-".concat(renderedIconID, "-icon-placeholder")
  });
  var Component = itemRole === 'link' ? 'a' : 'button';
  return _react.default.createElement(_MenuItemLayout.MenuItemLayout, {
    "aria-current": current && 'true',
    compact: compact,
    disabled: disabled,
    focusVisible: isFocusVisible,
    hasIcon: Boolean(renderedIcon),
    onBlur: handleOnBlur,
    onClick: handleOnClick,
    onKeyUp: handleOnKeyUp,
    className: className
  }, _react.default.createElement(Component, {
    href: href,
    role: "menuitem",
    target: target
  }, _react.default.createElement(_MenuItemLayout.MenuItemLayoutGrid, null, renderedIcon, children)), detail && _react.default.createElement(Detail, null, detail));
};

var MenuItem = (0, _styledComponents.default)(MenuItemInternal).withConfig({
  displayName: "MenuItem",
  componentId: "sc-13x060p-0"
})([""]);
exports.MenuItem = MenuItem;

var Detail = _styledComponents.default.div.withConfig({
  displayName: "MenuItem__Detail",
  componentId: "sc-13x060p-1"
})(["color:", ";margin-left:auto;margin-right:", ";padding-left:", ";"], (_ref) => {
  var {
    theme: {
      colors
    }
  } = _ref;
  return colors.text6;
}, (_ref2) => {
  var {
    theme: {
      space
    }
  } = _ref2;
  return space.medium;
}, (_ref3) => {
  var {
    theme: {
      space
    }
  } = _ref3;
  return space.large;
});
//# sourceMappingURL=MenuItem.js.map