{"version":3,"sources":["../../src/Menu/MenuItem.tsx"],"names":["MenuItemInternal","props","children","className","compact","propCompact","current","detail","disabled","href","icon","itemRole","onBlur","onClick","onKeyUp","target","isFocusVisible","setFocusVisible","contextCompact","MenuItemContext","undefined","handleOnKeyUp","event","handleOnBlur","setOpen","MenuContext","handleOnClick","defaultPrevented","renderIconPlaceholder","setRenderIconPlaceholder","renderedIconID","id","renderedIcon","Component","Boolean","MenuItem","Detail","styled","div","theme","colors","text6","space","medium","large"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2020 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { CompatibleHTMLProps } from '@looker/design-tokens'\nimport { IconNames } from '@looker/icons'\nimport styled from 'styled-components'\nimport React, { FC, ReactNode, useContext, useState, useEffect } from 'react'\nimport { useID } from '../utils/useID'\nimport { Icon } from '../Icon'\nimport { MenuContext, MenuItemContext } from './MenuContext'\nimport { MenuItemLayout, MenuItemLayoutGrid } from './MenuItemLayout'\n\nexport interface MenuItemProps extends CompatibleHTMLProps<HTMLElement> {\n  compact?: boolean\n\n  detail?: ReactNode\n  icon?: IconNames\n  /**\n   * Indicates the MenuItem is checked\n   */\n  current?: boolean\n  /**\n   * Sets the correct accessible role for the MenuItem:\n   * - Use **'link'** for items that navigation to another page\n   * - Use **'button'** for items that trigger in page interactions, like displaying a dialog\n   * @default 'button'\n   *\n   */\n  itemRole?: 'link' | 'button'\n}\n\nconst MenuItemInternal: FC<MenuItemProps> = (props) => {\n  const {\n    children,\n    className,\n    compact: propCompact,\n    current,\n    detail,\n    disabled,\n    href,\n    icon,\n    itemRole,\n    onBlur,\n    onClick,\n    onKeyUp,\n    target,\n  } = props\n\n  const [isFocusVisible, setFocusVisible] = useState(false)\n  const { compact: contextCompact } = useContext(MenuItemContext)\n  const compact = propCompact === undefined ? contextCompact : propCompact\n\n  const handleOnKeyUp = (event: React.KeyboardEvent<HTMLLIElement>) => {\n    setFocusVisible(true)\n    onKeyUp && onKeyUp(event)\n  }\n\n  const handleOnBlur = (event: React.FocusEvent<HTMLLIElement>) => {\n    setFocusVisible(false)\n    onBlur && onBlur(event)\n  }\n\n  const { setOpen } = useContext(MenuContext)\n  const handleOnClick = (event: React.MouseEvent<HTMLLIElement>) => {\n    setFocusVisible(false)\n    onClick && onClick(event)\n    // Close the Menu (unless event has preventDefault in onClick)\n    if (setOpen && !event.defaultPrevented) {\n      setOpen(false)\n    }\n  }\n\n  const { renderIconPlaceholder, setRenderIconPlaceholder } = useContext(\n    MenuItemContext\n  )\n\n  useEffect(() => {\n    icon && setRenderIconPlaceholder(true)\n  }, [icon, setRenderIconPlaceholder])\n\n  const renderedIconID = useID(props.id)\n\n  const renderedIcon = icon ? (\n    <Icon\n      name={icon}\n      mr=\"xsmall\"\n      size={24 / (compact ? 1.25 : 1)}\n      color=\"text6\"\n    />\n  ) : (\n    renderIconPlaceholder && (\n      <div data-testid={`menu-item-${renderedIconID}-icon-placeholder`} />\n    )\n  )\n\n  const Component = itemRole === 'link' ? 'a' : 'button'\n\n  return (\n    <MenuItemLayout\n      aria-current={current && 'true'}\n      compact={compact}\n      disabled={disabled}\n      focusVisible={isFocusVisible}\n      hasIcon={Boolean(renderedIcon)}\n      onBlur={handleOnBlur}\n      onClick={handleOnClick}\n      onKeyUp={handleOnKeyUp}\n      className={className}\n    >\n      <Component href={href} role=\"menuitem\" target={target}>\n        <MenuItemLayoutGrid>\n          {renderedIcon}\n          {children}\n        </MenuItemLayoutGrid>\n      </Component>\n      {detail && <Detail>{detail}</Detail>}\n    </MenuItemLayout>\n  )\n}\n\nexport const MenuItem = styled(MenuItemInternal)``\n\nconst Detail = styled.div`\n  color: ${({ theme: { colors } }) => colors.text6};\n  margin-left: auto;\n  margin-right: ${({ theme: { space } }) => space.medium};\n  padding-left: ${({ theme: { space } }) => space.large};\n`\n"],"file":"MenuItem.js"}