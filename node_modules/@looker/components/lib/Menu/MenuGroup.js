"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuGroup = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _designTokens = require("@looker/design-tokens");

var _List = require("../List");

var _MenuContext = require("./MenuContext");

var _MenuGroupLabel = require("./MenuGroupLabel");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var MenuGroupLayout = (_ref) => {
  var {
    children,
    className,
    compact,
    label
  } = _ref;
  var [renderIconPlaceholder, setRenderIconPlaceholder] = (0, _react.useState)(false);
  var {
    compact: contextCompact,
    renderIconPlaceholder: contextRenderIconPlaceholder
  } = (0, _react.useContext)(_MenuContext.MenuItemContext);
  var context = {
    compact: compact === undefined ? contextCompact : compact,
    renderIconPlaceholder: contextRenderIconPlaceholder || renderIconPlaceholder,
    setRenderIconPlaceholder
  };
  return _react.default.createElement("li", {
    className: className
  }, _react.default.createElement(_MenuContext.MenuItemContext.Provider, {
    value: context
  }, label && _react.default.createElement(_MenuGroupLabel.MenuGroupLabel, null, label), _react.default.createElement(_List.List, null, children)));
};

var MenuGroup = (0, _styledComponents.default)(MenuGroupLayout).withConfig({
  displayName: "MenuGroup",
  componentId: "hw8qej-0"
})(["", " padding:", " 0;"], _designTokens.reset, (_ref2) => {
  var {
    theme: {
      space
    }
  } = _ref2;
  return space.xsmall;
});
exports.MenuGroup = MenuGroup;
//# sourceMappingURL=MenuGroup.js.map