{"version":3,"sources":["../../../src/utils/color/blend.ts"],"names":["textBlends","uiBlends","blendColorTransparency","color","level","uiTransparencyBlend","css","theme","colors","text","mixColors","mixAmount","foreground","background","mixScaledColors","colorLuminance","lumnisanceAdjustmentScale","lower","lowest","adjustment","mixAdjustment","intentUIBlend","intent","generateIntentShade","intentColorLuminance","adjustAmount","generateBlendColors","ui1","ui2","ui3","ui4","ui5","text1","text2","text3","text4","text5"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2020 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { darken, mix, rgba, getLuminance, lighten } from 'polished'\nimport { css } from 'styled-components'\nimport { BlendColors, SpecifiableColors } from '../../system/color'\nimport { tintOrShadeUiColor } from './tintOrShadeUiColor'\nimport { scaleMixAmount } from './scaleMixAmount'\n\nconst textBlends = [45, 65, 78, 88, 95, 99]\nexport const uiBlends = [4, 12, 23, 34, 85]\ntype UIColorLevels = 1 | 2 | 3 | 4 | 5 | 6\n\nexport const blendColorTransparency = (color: string, level: UIColorLevels) =>\n  rgba(color, uiBlends[level - 1] / 100)\n\nexport const uiTransparencyBlend = (level: UIColorLevels) =>\n  css`\n    ${({ theme: { colors } }) => blendColorTransparency(colors.text, level)}\n  `\n\nexport const mixColors = (\n  mixAmount: number,\n  foreground: string,\n  background: string\n) => {\n  return mix(mixAmount / 100, foreground, background)\n}\n\nexport const mixScaledColors = (\n  mixAmount: number,\n  foreground: string,\n  background: string\n) => {\n  // Get the background colors luminance, if low, we need to scale the mix amount\n  const colorLuminance = getLuminance(background)\n\n  // We use this adjustment scale to to modify our blends based on the backgrounds lumosity\n  // The lower luminosity, the more intense we need to scale the blend\n  const lumnisanceAdjustmentScale = {\n    lower: 1.3,\n    lowest: 1.7,\n  }\n\n  // Adjust the mixAmount based on the background colors luminosity\n  let adjustment = mixAmount\n  if (colorLuminance < 0.16 && colorLuminance > 0.08) {\n    adjustment = lumnisanceAdjustmentScale.lower\n  } else if (colorLuminance < 0.08) {\n    adjustment = lumnisanceAdjustmentScale.lowest\n  }\n\n  // If the background's colors luminosity is greater than 0.3 use the default mix amount\n  // otherwise use the scaled mix\n  const mixAdjustment =\n    colorLuminance > 0.3 ? mixAmount : scaleMixAmount(mixAmount, adjustment)\n\n  return mix(mixAdjustment / 100, foreground, background)\n}\n\n// Blends an intent color with the background\nexport const intentUIBlend = (intent: string, level: UIColorLevels) => css`\n  ${({ theme: { colors } }) =>\n    mixScaledColors(uiBlends[level], colors[intent], colors.background)}\n`\n\n// Returns a tint or shade of an intent color, used to for text text that sits on top of a intentUIBlend\n// Adjust amount of lightening or darkening based on colors luminance as well as background colors luminance\nexport const generateIntentShade = (color: string) => {\n  const intentColorLuminance = getLuminance(color)\n\n  const adjustAmount =\n    intentColorLuminance > 0.3 ? intentColorLuminance * 0.55 : 0.125\n  return css`\n    ${({ theme: { colors } }) =>\n      getLuminance(colors.background) > 0.5\n        ? darken(adjustAmount, color)\n        : lighten(adjustAmount, color)}\n  `\n}\n\n/* eslint-disable sort-keys-fix/sort-keys-fix */\n\nexport const generateBlendColors = (colors: SpecifiableColors): BlendColors => {\n  const { background, text } = colors\n  return {\n    ui1: tintOrShadeUiColor(uiBlends[0], background),\n    ui2: tintOrShadeUiColor(uiBlends[1], background),\n    ui3: tintOrShadeUiColor(uiBlends[2], background),\n    ui4: tintOrShadeUiColor(uiBlends[3], background),\n    ui5: tintOrShadeUiColor(uiBlends[4], background),\n\n    text1: mixColors(textBlends[0], text, background),\n    text2: mixColors(textBlends[1], text, background),\n    text3: mixColors(textBlends[2], text, background),\n    text4: mixColors(textBlends[3], text, background),\n    text5: mixColors(textBlends[4], text, background),\n  }\n}\n"],"file":"blend.js"}