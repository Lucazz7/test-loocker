"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prismTheme = void 0;

var _theme = require("./theme");

var _palette = require("./tokens/color/palette");

var {
  inverse,
  text1
} = _theme.theme.colors;
var prismTheme = {
  plain: {
    backgroundColor: inverse,
    color: text1,
    fontFamily: _theme.theme.fonts.code,
    fontSize: _theme.theme.fontSizes.small
  },
  styles: [{
    style: {
      color: _palette.yellow200
    },
    types: ['prolog', 'doctype', 'cdata']
  }, {
    style: {
      color: text1
    },
    types: ['comment']
  }, {
    style: {
      opacity: 0.7
    },
    types: ['namespace']
  }, {
    style: {
      color: _palette.red300
    },
    types: ['parameter']
  }, {
    style: {
      color: _palette.yellow300
    },
    types: ['tag']
  }, {
    style: {
      color: _palette.purple200
    },
    types: ['operator', 'number', 'keyword', 'attr-name']
  }, {
    style: {
      color: _palette.blue200
    },
    types: ['punctuation']
  }, {
    style: {
      color: _palette.blue400
    },
    types: ['property', 'function', 'script']
  }, {
    style: {
      color: '#eeebff'
    },
    types: ['tag-id', 'selector', 'atrule-id']
  }, {
    style: {
      color: _palette.green300
    },
    types: ['string', 'attr-value']
  }, {
    style: {
      color: '#ffcc99'
    },
    types: ['boolean', 'entity', 'url', 'control', 'directive', 'unit', 'statement', 'regex', 'at-rule', 'placeholder', 'variable']
  }, {
    style: {
      textDecorationLine: 'line-through'
    },
    types: ['deleted']
  }, {
    style: {
      textDecorationLine: 'underline'
    },
    types: ['inserted']
  }, {
    style: {
      fontStyle: 'italic'
    },
    types: ['italic']
  }, {
    style: {
      fontWeight: 'bold'
    },
    types: ['important', 'bold']
  }, {
    style: {
      color: '#c4b9fe'
    },
    types: ['important']
  }]
};
exports.prismTheme = prismTheme;
//# sourceMappingURL=prismTheme.js.map